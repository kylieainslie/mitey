[{"path":"https://kylieainslie.github.io/mitey/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"EUROPEAN UNION PUBLIC LICENCE v. 1.2","title":"EUROPEAN UNION PUBLIC LICENCE v. 1.2","text":"Copyright (c) 2024 Kylie Ainslie EUPL © European Union 2007, 2016 European Union Public Licence (‘EUPL’) applies Work (defined ) provided terms Licence. use Work, authorised Licence prohibited (extent use covered right copyright holder Work). Work provided terms Licence Licensor (defined ) placed following notice immediately following copyright notice Work: Licensed EUPL expressed means willingness license EUPL. Definitions Licence, following terms following meaning: — ‘Licence’: Licence. — ‘Original Work’: work software distributed communicated Licensor Licence, available Source Code also Executable Code case may . — ‘Derivative Works’: works software created Licensee, based upon Original Work modifications thereof. Licence define extent modification dependence Original Work required order classify work Derivative Work; extent determined copyright law applicable country mentioned Article 15. — ‘Work’: Original Work Derivative Works. — ‘Source Code’: human-readable form Work convenient people study modify. — ‘Executable Code’: code generally compiled meant interpreted computer program. — ‘Licensor’: natural legal person distributes communicates Work Licence. — ‘Contributor(s)’: natural legal person modifies Work Licence, otherwise contributes creation Derivative Work. — ‘Licensee’ ‘’: natural legal person makes usage Work terms Licence. — ‘Distribution’ ‘Communication’: act selling, giving, lending, renting, distributing, communicating, transmitting, otherwise making available, online offline, copies Work providing access essential functionalities disposal natural legal person. Scope rights granted Licence Licensor hereby grants worldwide, royalty-free, non-exclusive, sublicensable licence following, duration copyright vested Original Work: — use Work circumstance usage, — reproduce Work, — modify Work, make Derivative Works based upon Work, — communicate public, including right make available display Work copies thereof public perform publicly, case may , Work, — distribute Work copies thereof, — lend rent Work copies thereof, — sublicense rights Work copies thereof. rights can exercised media, supports formats, whether now known later invented, far applicable law permits . countries moral rights apply, Licensor waives right exercise moral right extent allowed law order make effective licence economic rights listed. Licensor grants Licensee royalty-free, non-exclusive usage rights patents held Licensor, extent necessary make use rights granted Work Licence. Communication Source Code Licensor may provide Work either Source Code form, Executable Code. Work provided Executable Code, Licensor provides addition machine-readable copy Source Code Work along copy Work Licensor distributes indicates, notice following copyright notice attached Work, repository Source Code easily freely accessible long Licensor continues distribute communicate Work. Limitations copyright Nothing Licence intended deprive Licensee benefits exception limitation exclusive rights rights owners Work, exhaustion rights applicable limitations thereto. Obligations Licensee grant rights mentioned subject restrictions obligations imposed Licensee. obligations following: Attribution right: Licensee shall keep intact copyright, patent trademarks notices notices refer Licence disclaimer warranties. Licensee must include copy notices copy Licence every copy Work /distributes communicates. Licensee must cause Derivative Work carry prominent notices stating Work modified date modification. Copyleft clause: Licensee distributes communicates copies Original Works Derivative Works, Distribution Communication done terms Licence later version Licence unless Original Work expressly distributed version Licence — example communicating ‘EUPL v. 1.2 ’. Licensee (becoming Licensor) offer impose additional terms conditions Work Derivative Work alter restrict terms Licence. Compatibility clause: Licensee Distributes Communicates Derivative Works copies thereof based upon Work another work licensed Compatible Licence, Distribution Communication can done terms Compatible Licence. sake clause, ‘Compatible Licence’ refers licences listed appendix attached Licence. Licensee’s obligations Compatible Licence conflict /obligations Licence, obligations Compatible Licence shall prevail. Provision Source Code: distributing communicating copies Work, Licensee provide machine-readable copy Source Code indicate repository Source easily freely available long Licensee continues distribute communicate Work. Legal Protection: Licence grant permission use trade names, trademarks, service marks, names Licensor, except required reasonable customary use describing origin Work reproducing content copyright notice. Chain Authorship original Licensor warrants copyright Original Work granted hereunder owned /licensed //power authority grant Licence. Contributor warrants copyright modifications /brings Work owned /licensed //power authority grant Licence. time accept Licence, original Licensor subsequent Contributors grant licence contri butions Work, terms Licence. Disclaimer Warranty Work work progress, continuously improved numerous Contributors. finished work may therefore contain defects ‘bugs’ inherent type development. reason, Work provided Licence ‘’ basis without warranties kind concerning Work, including without limitation merchantability, fitness particular purpose, absence defects errors, accuracy, non-infringement intellectual property rights copyright stated Article 6 Licence. disclaimer warranty essential part Licence condition grant rights Work. Disclaimer Liability Except cases wilful misconduct damages directly caused natural persons, Licensor event liable direct indirect, material moral, damages kind, arising Licence use Work, including without limitation, damages loss goodwill, work stoppage, computer failure malfunction, loss data commercial damage, even Licensor advised possibility damage. However, Licensor liable statutory product liability laws far laws apply Work. Additional agreements distributing Work, may choose conclude additional agreement, defining obligations services consistent Licence. However, accepting obligations, may act behalf sole responsibility, behalf original Licensor Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted Contributor fact accepted warranty additional liability. Acceptance Licence provisions Licence can accepted clicking icon ‘agree’ placed bottom window displaying text Licence affirming consent similar way, accordance rules applicable law. Clicking icon indicates clear irrevocable acceptance Licence terms conditions. Similarly, irrevocably accept Licence terms conditions exercising rights granted Article 2 Licence, use Work, creation Derivative Work Distribution Communication Work copies thereof. Information public case Distribution Communication Work means electronic communication (example, offering download Work remote location) distribution channel media (example, website) must least provide public information requested applicable law regarding Licensor, Licence way may accessible, concluded, stored reproduced Licensee. Termination Licence Licence rights granted hereunder terminate automatically upon breach Licensee terms Licence. termination terminate licences person received Work Licensee Licence, provided persons remain full compliance Licence. Miscellaneous Without prejudice Article 9 , Licence represents complete agreement Parties Work. provision Licence invalid unenforceable applicable law, affect validity enforceability Licence whole. provision construed reformed necessary make valid enforceable. European Commission may publish linguistic versions new versions Licence updated versions Appendix, far required reasonable, without reducing scope rights granted Licence. New versions Licence published unique version number. linguistic versions Licence, approved European Commission, identical value. Parties can take advantage linguistic version choice. Jurisdiction Without prejudice specific agreement parties, — litigation resulting interpretation License, arising European Union institutions, bodies, offices agencies, Licensor, Licensee, subject jurisdiction Court Justice European Union, laid article 272 Treaty Functioning European Union, — litigation arising parties resulting interpretation License, subject exclusive jurisdiction competent court Licensor resides conducts primary business. Applicable Law Without prejudice specific agreement parties, — Licence shall governed law European Union Member State Licensor seat, resides registered office, — licence shall governed Belgian law Licensor seat, residence registered office inside European Union Member State. Appendix ‘Compatible Licences’ according Article 5 EUPL : — GNU General Public License (GPL) v. 2, v. 3 — GNU Affero General Public License (AGPL) v. 3 — Open Software License (OSL) v. 2.1, v. 3.0 — Eclipse Public License (EPL) v. 1.0 — CeCILL v. 2.0, v. 2.1 — Mozilla Public Licence (MPL) v. 2 — GNU Lesser General Public Licence (LGPL) v. 2.1, v. 3 — Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC -SA 3.0) works software — European Union Public Licence (EUPL) v. 1.1, v. 1.2 — Québec Free Open-Source Licence — Reciprocity (LiLiQ-R) Strong Reciprocity (LiLiQ-R+) — European Commission may update Appendix later versions licences without producing new version EUPL, long provide rights granted Article 2 Licence protect covered Source Code exclusive appropriation. — changes additions Appendix require production new EUPL version.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Code validation for Vink method","text":"One motivations behind creating mitey package provide flexible, documented code methods can help estimate epidemiological quantities interest, serial interval, time onset symptoms primary case onset symptoms secondary case. article, describe method developed Vink et al. 201418 estimate mean standard deviation serial interval distribution using data symptom onset times (see Methods details). , demonstrate use mitey apply method data, validate able produce estimates original manuscript18.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"methods","dir":"Articles","previous_headings":"Introduction","what":"Methods","title":"Code validation for Vink method","text":"method proposed Vink et al.18 developed estimate characteristics serial interval distribution, namely mean standard deviation, using data describing dates symptom onset cases infected particular pathogen. method involves calculating index case--case (ICC) interval person, person greatest value number days since symptom onset considered index case. rest individuals ICC interval calculated number days symptom onset date symptom onset date index case. method assumes ICC intervals can split different routes transmission: Co-Primary (CP), Primary-Secondary (PS), Primary-Tertiary (PT), Primary-Quaternary (PQ) based length ICC interval. method constructs likelihood function ICC intervals using mixture model mixture components different transmission routes. , using Expectation-Maximization (EM) algorithm, method iteratively calculates probability ICC interval falls one four routes transmission. method assumes underlying Normal distribution serial interval distribution, extended assume underlying Gamma distribution. distributions can specified si_estim using dist = option.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated Data","title":"Code validation for Vink method","text":"First use simulated ICC intervals set determine able correctly estimate mean standard deviation simulated serial interval using si_estim function mitey package. , directly simulate ICC intervals based route transmission. simulated data provided supplemental material Vink et al. specified mean serial interval hmu 15 specified standard deviation hsigma 3. weights route transmission specified hw1, hw2, hw3, hw4, respectively. Figure 1. Histogram index-case case intervals (days) simulated data. output si_estim named list elements mean, sd, wts, contain estimated mean, standard deviation, weights serial interval distribution, respectively. see using simulated data assuming underlying normal distribution, obtain estimates close input values: mean serial interval estimate 15.03 standard deviation 2.79. also able recapture input weights: hw1 = 0.21, hw2 = 0.48, hw3 = 0.2, hw4 = 0.11. Using plot_si_fit function, can use outputs si_estim plot fitted serial interval symptom onset data. Figure 2. Fitted serial interval curves plotted symptom onset data simulated symptom onset data. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"set.seed(1234)  N <- 10000; hmu<-15; hsigma<-3; hw1 <- 0.2; hw2 <- 0.5; hw3 <- 0.2; hw4 <- 0.1  CP <- rhalfnorm((hw1*N),theta=sqrt(pi/2)/(sqrt(2)*hsigma)) PS <- rnorm(hw2*N,mean=hmu,sd=hsigma) PT <- rnorm(hw3*N,mean=2*hmu,sd=sqrt(2)*hsigma) PQ <- rnorm(hw4*N,mean=3*hmu,sd=sqrt(3)*hsigma)  sim_data <- round(c(CP,PS,PT,PQ)) #>  [1]  5  1  5 10  2  2  2  2  2  4 results<- si_estim(sim_data, dist = \"normal\") results #> $mean #> [1] 15.03357 #>  #> $sd #> [1] 2.786672 #>  #> $wts #> [1] 2.100299e-01 4.823883e-01 6.706310e-09 2.003141e-01 2.304775e-15 #> [6] 1.072676e-01 9.057491e-22 plot_si_fit(     dat = sim_data,     mean = results$mean[1],     sd = results$sd[1],     weights = c(results$wts[1], results$wts[2] + results$wts[3],                 results$wts[4] + results$wts[5], results$wts[6] + results$wts[7]),     dist = \"normal\"   )"},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"historical-data","dir":"Articles","previous_headings":"","what":"Historical Data","title":"Code validation for Vink method","text":"Next, estimate mean serial interval using method Vink et al.18 different historical data sets. historical data stored articles/validation_data.rds. data set contains 5 columns: Author: first author published manuscript describing data Year: year manuscript published Pathogen: pathogen interest (e.g, influenza, measles) Country: country data collected ICC_interval: ICC intervals case described manuscript useful feature si_estim can applied multiple vectors ICC intervals stored within long-format data frame using dplyr::summarise. example shown using val_data. first select necessary columns, Author, Pathogen, Country, ICC_interval. , group data, using group_by, Author, Pathogen, Country, si_estim applied ICC intervals one study one pathogen time. Finally, apply si_estim set ICC intervals using summarise. can also specify initial values used estimate mean standard deviation serial interval. default sample mean sample standard deviation. EM algorithm sensitive choice initial value, specify initial values Table 2 Vink et al. initial values stored articles/initial_values.rds. initial values standard deviation minimum mean serial interval divided 2 random value drawn uniform distribution 2 5. Finally, Due format si_estim’s output named list, create new column estimate using mutate purrr:map_dbl. resulting output tibble columns: Author, Pathogen, Country, mean, sd, wts. mean sd columns refer estimates mean standard deviation serial interval distribution. wts column refers weights different transmission routes, can used inputs plotting fitted serial interval distribution using plot_si_fit. weights stored list, visible printing results, can accessed using results_historical$wts. comparing estimates produced si_estim estimates presented Vink et al., see si_estim successfully recaptures estimates original study (Table 1). Table 1. Estimates mean standard deviation (SD) serial interval distribution Vink et al. `si_estim` different historical data sets.  Vink et al. Estimates si_estim Estimates Author Year Pathogen Country Mean SD Mean SD Hahne1 2009 Influenza (H1N1)pdm09 Netherlands 1.7 1.2 1.7 1.2 Cauchemez2 2009 Influenza (H1N1)pdm09 United States 2.1 1.2 2.1 1.2 Savage3 2011 Influenza (H1N1)pdm09 Canada 2.8 0.8 2.8 0.8 Papenburg4 2010 Influenza (H1N1)pdm09 Canada 2.9 1.2 2.9 1.2 France5 2010 Influenza (H1N1)pdm09 United States 3.0 0.9 3.0 0.9 Morgan6 2010 Influenza (H1N1)pdm09 United States 3.7 1.1 3.7 1.1 Viboud7 2004 Influenza (H3N2) France 2.2 0.8 2.2 0.8 Aaby8 1990 Measles Kenya 9.9 2.4 9.9 2.4 Bailey9 1954 Measles England 10.9 1.9 10.9 1.9 Simpson10 1952 Measles England 10.9 2.0 10.9 2.0 Chapin11 1925 Measles United States 11.9 2.6 11.9 2.6 Fine12 2003 Measles England 13.7 1.5 13.7 1.5 Fine12 2003 Measles United States 13.8 2.5 13.8 2.5 Simpson10 1952 Mumps England 18.0 3.5 18.0 3.5 de Greeff13 2010 Pertussis Netherlands 22.8 6.5 22.8 6.5 Crowcroft14 2008 RSV England 7.5 2.1 7.5 2.1 Aycock15 1946 Rubella Unknown 18.3 2.0 18.3 2.0 Fine12 2003 Smallpox Germany 16.7 3.3 16.7 3.3 Fine12 2003 Smallpox Kosovo 17.3 1.9 17.3 1.9 Vally16 2007 Varicella Australia 13.1 2.2 13.1 2.2 Simpson10 1952 Varicella England 14.1 2.4 14.1 2.4 Lai17 2011 Varicella Taiwan 14.2 1.3 14.2 1.3 si_estim, plotting function plot_si_fit can applied numerious vectors ICC intervals using purrr:group_map. results outputted si_estim used directly must merged original ICC interval data. call new data frame df_merged contain column(s) identifying study ICC intervals correspond, well mean, standard deviation, weights outputted si_estim. Figure 3. Fitted serial interval curves plotted symptom onset data random sample historical data studies Table 1. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"#> # A tibble: 6 × 5 #>   Author Year  Pathogen Country ICC_interval #>   <chr>  <chr> <chr>    <chr>          <dbl> #> 1 Aaby   1990  Measles  Kenya              0 #> 2 Aaby   1990  Measles  Kenya              0 #> 3 Aaby   1990  Measles  Kenya              0 #> 4 Aaby   1990  Measles  Kenya              0 #> 5 Aaby   1990  Measles  Kenya              0 #> 6 Aaby   1990  Measles  Kenya              0 initial_values <- readRDS(\"initial_values.rds\") val_data_w_init <- left_join(val_data, initial_values, by = \"Pathogen\") results_historical <- val_data_w_init %>%   group_by(Author, Pathogen, Country) %>%   summarise(result = list(si_estim(.data$ICC_interval,                                     init = c(first(.data$mean_si), first(.data$sd_si))             ))) %>%   mutate(     mean = map_dbl(result, \"mean\"),     sd = map_dbl(result, \"sd\"),     wts = map(result, \"wts\")    ) %>%   select(-result) #> # A tibble: 22 × 6 #> # Groups:   Author, Pathogen [20] #>    Author    Pathogen               Country  mean    sd wts       #>    <chr>     <chr>                  <chr>   <dbl> <dbl> <list>    #>  1 Aaby      Measles                Kenya    9.93  2.40 <dbl [7]> #>  2 Aycock    Rubella                Unknown 18.3   1.97 <dbl [7]> #>  3 Bailey    Measles                England 10.9   1.93 <dbl [7]> #>  4 Cauchemez Influenza A(H1N1)pdm09 USA      2.08  1.24 <dbl [7]> #>  5 Chapin    Measles                USA     11.9   2.56 <dbl [7]> #>  6 Crowcroft RSV                    England  7.52  2.11 <dbl [7]> #>  7 Fine      Measles                England 13.7   1.50 <dbl [7]> #>  8 Fine      Measles                USA     13.8   2.55 <dbl [7]> #>  9 Fine      Smallpox               Germany 16.7   3.28 <dbl [7]> #> 10 Fine      Smallpox               Kosovo  17.3   1.90 <dbl [7]> #> # ℹ 12 more rows #> # A tibble: 10 × 13 #>    Author Pathogen Country ICC_interval  mean    sd weight_1 weight_2  weight_3 #>    <chr>  <chr>    <chr>          <dbl> <dbl> <dbl>    <dbl>    <dbl>     <dbl> #>  1 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  2 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  3 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  4 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  5 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  6 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  7 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  8 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  9 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #> 10 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #> # ℹ 4 more variables: weight_4 <dbl>, weight_5 <dbl>, weight_6 <dbl>, #> #   weight_7 <dbl> # Apply the plot_si_fit function by study plots <- df_merged %>%   group_by(Author, Pathogen, Country) %>%   group_map(~ plot_si_fit(     dat = .x$ICC_interval,     mean = .x$mean[1],     sd = .x$sd[1],     weights = c(.x$weight_1[1], .x$weight_2[1] + .x$weight_3[1],                 .x$weight_4[1] + .x$weight_5[1], .x$weight_6[1] + .x$weight_7[1]),     dist = \"normal\"   ))  # Annotate plots with study names and labels # Find the order of the groups group_order <- df_merged %>%   group_by(Author, Pathogen, Country) %>%   group_keys()  labeled_plots <- lapply(seq_along(plots), function(i) {   plots[[i]] +     ggtitle(paste(group_order[i,1], group_order[i,2], group_order[i,3])) +               theme(plot.title = element_text(size = 8, hjust = 0.5),           axis.title.x = element_text(size = 8))   })  # Combine plots into a multi-pane figure final_plot <- plot_grid(   plotlist = labeled_plots[sample(1:22, 8)], # select studies to display randomly   labels = \"AUTO\",      # Automatically adds labels (A, B, C, etc.)   label_size = 12,      # Size of the labels   ncol = 4              # Number of columns; adjust as needed )"},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Code validation for Vink method","text":", demonstrate use mitey package estimate characteristics serial interval distribution applying method developed Vink et al. commonly available symptom onset data. show able reproduce estimates mean standard deviation serial interval distribution original study applying method numerous historical data sets variety pathogens.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"On the epidemiological characteristics of scabies","text":"Introduction: Scabies contagious skin disease caused infestation skin Sarcopes scabiei mite, causing itchy rash. Scabies affects 400 million people annually worldwide, rise scabies cases observed recent years throughout Western Europe. Despite large number people infected scabies annually, fundamental epidemiological characteristics scabies infections described. Methods: work use publicly available data date symptom onset scabies outbreaks determine mean serial interval, time symptom onset infector symptom onset infectee, scabies infection. also use weekly diagnoses reported scabies infections sentinel surveillance Netherlands 2011-2023 determine quantities related spread scabies time, namely, time-varying reproduction number, growth rate, basic reproduction number. Results: found considerable heterogeneity estimates serial interval different data sources, mean serial interval estimates ranging 98.4 days 167.3 days. estimated pooled mean serial interval 123.24 days (95% credible interval: 91.44, 153.41 days). analysis annual incidence scabies per 1000 people Netherlands resulted estimated annual growth rate 0.25 cases per 1000 people per year. Using estimated growth rate mean standard deviation serial interval distribution estimated basic reproduction number, R0=1.09R_0 = 1.09. looking scabies incidence may years Netherlands, saw yearly waves infections, amplitude incidence gradually increasing time. estimated time-varying reproduction number time diagnosis found RtR_t peaked cases diagnosed August. Discussion: study offers new insights scabies transmission dynamics suggests additional interventions limited efficacy prevent 8% secondary infections suffice bring reproduction number one. may achieved increasing public awareness targeted measures. strategies may effective similar European settings. findings also underscore need precise data scabies transmission, improve model accuracy control strategies. Future research focus detailed characterization scabies’ natural history enhance intervention modeling better inform containment efforts.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"On the epidemiological characteristics of scabies","text":"Scabies classified neglected tropical disease caused infestation skin microscopic mite (Sarcoptes scabiei)1. Symptoms characterized itchiness rash site infestation. Scabies affects around 400 million people per year, accounts large proportion skin disease many low- middle-income countries1, particularly tropical regions Asia, South America, Oceania2. Historically, scabies infections common affliction Europe late 1800s early 1900s incidence peaking 1918 19453,4. end World War II, scabies incidence Europe fell remained low decades3–5. However, rise scabies cases observed Europe recent years6–11, may increase burden healthcare systems due scabies rising trend continues. global disease burden scabies, expressed disability-adjusted life years (DALY), low compared infectious diseases. 2017 study found scabies responsible 0.21% DALYs conditions studied worldwide2. However, areas high scabies prevalence shown high disease burden scabies partially due secondary infections can lead severe outcomes2. Additionally, simple diagnostic test scabies, diagnosis relies clinical assessment12, can increase workload general practitioners (GPs) periods high scabies incidence. Furthermore, individuals infected scabies can suffer stigma, discrimination distress12,13 addition physical manifestations disease, making less likely seek medical care promoting transmission14. Research also shown scabies can economic implications patients healthcare system due ineffective long duration treatment12. Despite considerable burden scabies poses, little known dynamics scabies transmission, generation time (time infection index case secondary case), serial interval (time onset symptoms index case time symptom onset secondary case), growth rate, reproduction number (average number secondary cases resulting one index case). series studies 1940s Kenneth Mellanby colleagues15,16 form much basis current understanding scabies transmission. important results experiments performed 1940s Mellanby colleagues include estimation incubation period, time symptom onset, 4-6 weeks first infections 24 hours subsequent infections; parasite rate, defined number mature female mites per person, time, shown increase rapidly, peak around 100 days infection, decline quickly; probability transmission via secondary object (e.g., bed sheets) low transmission occurs person--person contact15. However, studies performed using healthy volunteers, may representative scabies transmission dynamics populations. work, aim estimate key epidemiological characteristics scabies, serial interval, growth rate, reproduction number, better describe scabies transmission dynamics. Specifically, use time series reported symptom onset dates scabies outbreaks literature estimate mean serial interval scabies. also use data number scabies diagnoses week Netherlands estimate time-varying reproduction number annual growth rate. knowledge, first study estimate quantities scabies, can provide critical information design appropriate infection control policy.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"data-sources","dir":"Articles","previous_headings":"Methods","what":"Data Sources","title":"On the epidemiological characteristics of scabies","text":"estimate mean serial interval scabies infections, conducted rapid literature search identify papers publicly available data date symptom onset scabies outbreaks. searched Google images using terms “scabies” “epidemic curve” find papers featured symptom onset data time found 8 papers. Papers excluded data date symptom onset available able reconstruct date symptom onset time series paper. excluded studies whose data span sufficiently long time window secondary infections occur. defined “sufficiently long” 100 days based average peak parasite rate described Mellanby15. excluding papers meet criteria, included total 4 papers analysis. addition publicly available data date scabies symptom onset, used high resolution data number diagnoses scabies time Netherlands estimate time-varying reproduction number growth rate. data described elsewhere6,17. Briefly, obtained weekly incidence scabies (per 1000 people) 2011 2023 diagnosed general practitioners (GPs) stored nationally representative primary care database GPs hosted Netherlands Institute Health Services Research (Nivel)17. Scabies notifiable disease Netherlands, thus information trends incidence scabies cases can obtained GP diagnoses dispensation scabicides. Individuals institutions (e.g., care homes) generally taken account registrations.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"serial-interval","dir":"Articles","previous_headings":"Methods","what":"Serial Interval","title":"On the epidemiological characteristics of scabies","text":"Using dates symptom onset scabies cases four different studies18–21 scabies outbreaks (Table 1), estimated mean standard deviation serial interval distribution using method proposed Vink et al.22. method involves calculating index case--case (ICC) interval person, person greatest value number days since symptom onset considered index case. rest individuals ICC interval calculated number days symptom onset index case. assumed serial interval distributions scabies can approximated normal (Gaussian) distribution. Since serial intervals can negative, albeit low probability, use distribution continuous scale appropriate. Gamma distribution flexible shape, defined positive values serial interval can used probability negative values low. performed sensitivity analysis assume serial intervals scabies can approximated Gamma distribution (see Appendix). used brms package R23 estimate pooled mean serial interval. used Bayesian hierarchical random-effects model assume typical distribution serial intervals, outbreak-specific mean serial interval sampled24. specified prior distribution pooled mean normal distribution mean 100 days, based Mellanby’s reports parasite rate standard deviation 50 days make sure prior informative. used Cauchy(0,1) distribution -study heterogeneity. performed sensitivity analyses choices prior distributions (see Appendix).","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"growth-rate-and-basic-reproduction-number-r_0","dir":"Articles","previous_headings":"Methods","what":"Growth Rate and Basic Reproduction Number (R0R_0)","title":"On the epidemiological characteristics of scabies","text":"estimated annual growth rate scabies cases fitting generalized linear model (GLM) log link quasipoisson family annual number scabies diagnoses per 1000 people 2011 2023 Netherlands25. approach accounts overdispersion commonly observed count data allows non-integer values data. GLM log link assumes exponential growth model, logarithm expected count scabies cases linearly related time assumes quasipoisson distributed errors. Using fitted quasipoisson model, determined projected incidence scabies per 1000 people 2033, assuming interventions implemented growth rate remains constant. calculated 95% prediction intervals predicted incidence using standard error values adjusted takes account dispersion parameter derived model, ensuring estimates appropriately reflect uncertainty predictions. Using estimated annual growth rate, can estimate basic reproduction number R0=exp(r*T–(1/2)r2s2)R_0 = \\exp(r*T – (1/2) r^2 s^2), rr annual growth rate, TT mean generation time (years), s2s^2 variance generation time distribution26. assume nearly everyone exposed previously infected.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"time-varying-reproduction-number","dir":"Articles","previous_headings":"Methods","what":"Time-varying Reproduction Number","title":"On the epidemiological characteristics of scabies","text":"obtained weekly reported diagnoses scabies infections per 1000 people 2011 2023 Netherlands6,25. estimate time-varying case reproduction number, first randomly assigned reported scabies case date diagnosis week case reported. Since scabies hard diagnose prior symptom onset16, diagnosed cases captured part sentinel surveillance based GP diagnosis25, use date diagnosis rather date symptom onset. Using constructed daily time series date diagnosis, applied method proposed Wallinga Lipsitch26 estimate time-varying daily case reproduction number. case reproduction number defined average number new infections individual becomes diagnosed particular time point go cause27, useful retrospective analyses one presented . method Wallinga Lipsitch estimates time-varying case reproduction number determining likelihood event occurring every pair time points26. method requires specification serial interval distribution. assumed normal serial interval distribution mean 123.24 days standard deviation 31.55 days, estimated previously. Due unobserved onward cases end time series, adjusted right truncation28,29. obtain 95% confidence intervals daily case reproduction number, generated 100 bootstrapped samples resampling case replacement reconstructing incidence time series bootstrapped sample. Reproduction number estimates smoothed using rolling average 6 weeks. using serial interval distribution approximation generation interval, strictly positive, performed sensitivity analysis assumed serial interval distribution Gamma distributed mean variance. analyses performed R 4.4.030. Additional R packages used work cited Appendix.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"serial-interval-1","dir":"Articles","previous_headings":"Results","what":"Serial Interval","title":"On the epidemiological characteristics of scabies","text":"estimated mean standard deviation serial interval using epidemic curves study assuming underlying Normal distribution (Table 1). considerable variation estimates mean serial interval studies. shortest estimated mean serial interval (98.4 days) estimated data Ariza et al.18 describing outbreak scabies kindergarten Germany. largest estimated mean serial interval (167.34 days) estimated data Kaburi et al.19 outbreak preschool Ghana. Using data outbreak scabies care home Netherlands20 obtained estimated mean serial interval 110.7 days. Finally, obtained estimated mean serial interval 122.9 days data outbreak scabies fishing community Hoima District Uganda21. assessed fitted derial interval distribution visually plotting estimated densities epidemic curves (Figure 1). performed sensitivity analysis estimated mean standard deviation serial interval assuming underlying Gamma distribution (Table S1 Figure S1). found obtained similar mean estimates compared assuming underlying Normal distribution (albeit lower studies), estimated standard deviations larger. Model fit assessed visually plotting estimated densities epidemic curves (Figure S1) found Gamma distribution poorer fit data compared normal distribution. Table 1. Estimated mean standard deviation (SD) serial interval distribution, days, study. Study Mean Standard Deviation Akunzirwe et al. 122.92 26.92 Ariza et al. 98.40 8.54 Kaburi et al. 167.34 9.72 Tjon-Kon-Fat et al 110.72 16.14 Figure 1. Epidemic curves estimated serial interval distributions four scabies outbreaks. Red line indicates estimated serial interval density assuming underlying normal distribution. obtain pooled estimate mean serial interval, analysed data Bayesian meta-analysis random intercepts study.  estimated pooled mean serial interval 123.24 days (95% credible interval: 91.44, 153.41 days) (Figure 2). saw individual study estimates (Table 1), analysis provided evidence substantial heterogeneity among studies due large value standard deviation random intercepts (31.55 days). large variation mean serial interval estimates can visualised plotting estimated distributions study’s serial interval shown Figure 2). normal distribution assumed, parameterized estimated mean standard deviation serial interval study. Figure 2. Forest plot estimated mean serial intervals pooled mean.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"growth-rate-and-basic-reproduction-number-r_0-1","dir":"Articles","previous_headings":"Results","what":"Growth Rate and Basic Reproduction Number (R0R_0)","title":"On the epidemiological characteristics of scabies","text":"estimated annual growth rate scabies cases fitting exponential growth model annual incidence scabies per 1000 people 2011 2023 Netherlands25. estimated annual growth rate 0.25 (95% CI: 0.2, 0.3) . Using previously estimated pooled mean serial interval (123.24 days 0.34 years) standard deviation serial interval (31.55 days 0.09 years) proxy generation time, estimated basic reproduction number R0=R_0 = 1.09 (95% CI: 1.07, 1.11) . Using fitted exponential growth model estimated growth rate, determined projected annual incidence scabies per 1000 people 2033 interventions implemented. found substantial increase scabies incidence next 10 years Netherlands measures taken mitigate scabies spread (Figure 3). Figure 3. Annual scabies incidence per 1000 people 2011 2023 (points) projected scabies indcidence per 1000 people 2024 2033 (line) using exponential growth model annual growth rate 0.25 (95% CI: 0.20, 0.30) cases per 1000 people. Shaded regions represent 95% prediction intervals projected scabies incidence. y-axis displayed log-scale represents natural log scabies incidence per 1000 people.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"time-varying-reproduction-number-1","dir":"Articles","previous_headings":"Results","what":"Time-varying Reproduction Number","title":"On the epidemiological characteristics of scabies","text":"determine pattern scabies spread time, particularly incidence scabies infections displays repeating temporal pattern (e.g., seasonal waves), first plotted weekly incidence scabies infections per 1000 people Netherlands 2011 2023 (Figure 4). observed approximate yearly peaks troughs incidence. Incidence typically highest October November (however, 2022, highest incidence occurred December). additional rises incidence March-May (Figure S2) years. Cumulative incidence typically lowest summer months June/July rising August. also observed amplitude peak incidence gradually increasing time. marked increases peak incidence 2022, 2023, beginning 2024 (Figure 4). observed patterns scabies incidence indicate approximately three generations infections per year (Figure S2). example, 2023, one generation gets diagnosed October, next generation gets diagnosed January third generation gets diagnosed May. Figure 4. Incidence scabies infections per 1000 people Netherlands date diagnosis. Next, estimated time-varying case reproduction number weekly scabies diagnoses (Figure 5). weekly incidence, see temporal waves transmission, RtR_t peaking August. time difference peak incidence (October-January, Figure S2) versus peak reproduction number (June-September) can explained long serial interval scabies (123 days 31-day standard deviation). Therefore, infections generated diagnosed cases October-January likely manifest several months later, due long serial interval. performed sensitivity analysis estimated time-varying reproduction number assuming underlying gamma distribution serial interval mean standard deviation. obtained similar estimates RtR_t assumed underlying serial interval distribution Normal distribution (Figure S3). Figure 5. Time-varying reproduction number scabies transmission. Colored bands denote season. Winter = December 1 – February 28 (29 leap year); Spring = March 1 – May 31; Summer = June 1 – August 31; Autumn = September 1 – November 31. Shaded region represents 95% confidence envelope.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"On the epidemiological characteristics of scabies","text":"work, aimed characterize scabies transmission dynamics estimating key epidemiological parameters namely, mean standard deviation serial interval distribution, basic reproduction number, annual growth rate, time-varying reproduction number. , provide first estimates serial interval scabies infection. used symptom onset data four previously published studies scabies outbreaks found estimates mean serial interval ranged 98 days 167 days. large range serial interval may due difference study setting (school, nursing home, general population), contact patterns within settings, data quality. performed meta-analysis obtained pooled estimate mean serial interval 123 days. estimate order magnitude duration reach peak scabies parasite rate (100 days since infection) plus incubation period (28-42 days) described Mellanby15. However, estimate used caution. estimated pooling data studies different populations, geographical locations, settings, using data time symptom onset. precise estimates mean serial interval, future studies collect information transmission pairs. observed seasonality scabies transmission, finding scabies incidence highest Octber November, time-varying reproduction number peaked August. pattern may due long serial interval scabies (123 days), whereby, delayed onset secondary cases shifts peak RtR_t several months peak incidence. seasonal pattern scabies incidence documented European countries7–11,31 well Western Pacific32 explained increased indoor contact colder months33. seasonal pattern scabies transmission can also partially explained school calendar. Since scabies transmission shown driven adolescents young adults6,7, seasonal epidemics can seeded start school year peak winter reaching trough late spring summer school year ends. Conversely, peak transmission occur summer people wearing less clothing; therefore, making skin--skin contact probable, cases detected much later fall winter. Interestingly, contrast almost notifiable infectious diseases, found numbers scabies cases increased COVID-19 pandemic (relative years prior pandemic). infectious diseases, non-SARS-CoV-2 respiratory viruses, saw decreased incidence COVID-19 pandemic due effective control measures34 underreporting underdiagnosis6. increase scabies infections COVID-19 pandemic also observed countries, Ireland35, Spain36, Ethiopia37, Turkey38. increases scabies infestations likely due increased indoor contact result COVID-19 lockdowns control measures restricted personal movement, curfews6, often led people staying overnight. time indoors, members households share space long periods, may increase risk transmitting scabies mites direct contact fomites35,36. study several limitations. First, estimating serial interval reproduction number, assume infection person’s first infection. time symptom onset infection (incubation period) described 4-6 weeks person’s first infection, 24 hours subsequent infections15. significant portion individuals experiencing post-primary infection, estimated mean serial interval likely overestimated. Therefore, estimates considered upper bounds average serial interval. Second, estimating time-varying reproduction number, used pooled mean standard deviation meta-analysis across studies scabies epidemics. studies varied setting, geographic location, study population, individual estimates mean serial interval varied considerably across studies. possible using pooled mean standard deviation meta-analysis represent true mean serial interval among Dutch population; however, estimates exist. Third, estimate time-varying reproduction number use data date scabies diagnosis. Since know delay infection diagnosis, precisely pinpoint time transmission events occur. study scabies epidemic Germany, index case diagnosed approximately 3 months following symptom onset18. delay diagnosis can due fact scabies symptoms unique scabies (itching, rash) misdiagnosed first, thus causing delay symptom onset diagnosis. correcting delay symptom onset diagnosis scabies cases improve estimates time-varying reproduction number based time infection, information routinely collected making correction delay difficult. Future studies focus trying gather information delay symptom onset diagnosis. Additionally, estimate incubation period scabies range provided Mellanby 4-6 weeks15. data original study literature support estimate provide point estimate confidence bounds. Future research aim obtain precise information incubation period scabies infection. Scabies continues problem globally better understanding epidemiological characteristics govern scabies transmission can help containment efforts. estimated , Netherlands, R0=1.09R_0=1.09, just one. required control effort prevent epidemic growing prevent (1−1/R0)*100%=8%(1-1/R_0) * 100\\% = 8\\% secondary infections. reduction secondary infections can achieved additional measures even low efficacy, educating age groups (adolescents young adults) scabies prevalent causes symptoms scabies infections, requiring scabies check university students prior school year, informing GPs higher risk scabies certain groups quickly diagnose patients symptoms consistent scabies infestation. strategies may effective locations scabies prevalent, may help curb scabies infections European countries similar populations scabies prevalence Netherlands. conclusion, study provided first estimates epidemiological parameters governing scabies transmission. evidence continues suggest scabies growing problem European countries remains large problem elsewhere, estimates provided can help determine required control efforts curb scabies epidemics. example, estimated epidemiological quantities can used parameterize mathematical models scabies spread determine projected impact different control measures. Prior mathematical modelling scabies transmission rely work Mellanby15 model parameterisation39–41. work also highlighted little known transmission dynamics scabies. Future work focus obtaining precise information natural history scabies infections improve estimates underlying quantities govern scabies spread.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"data-availability","dir":"Articles","previous_headings":"","what":"Data Availability","title":"On the epidemiological characteristics of scabies","text":"code, data, scripts reproduce results paper can found https://github.com/kylieainslie/mitey.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"funding-statement","dir":"Articles","previous_headings":"","what":"Funding Statement","title":"On the epidemiological characteristics of scabies","text":"study financed Netherlands Ministry Health, Welfare Sport.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"serial-interval-2","dir":"Articles","previous_headings":"Appendix > Sensitivity Analyses","what":"Serial Interval","title":"On the epidemiological characteristics of scabies","text":"performed sensitivity analysis underlying distribution serial interval. main analysis assumed serial interval normally distributed. sensitivity analysis assumed serial interval Gamma distributed. estimated mean standard deviation serial interval study shown Table S1 . studies, except Larrosa et al., mean serial interval lower estimated assuming underlying Gamma distribution. assuming underlying Gamma distribution, standard deviations higher assuming underlying Normal distribution. see Figure S1  Gamma distribution fit data well. possible Gamma distribution fits scabies data poorly due long incubation period scabies possibility negative serial intervals. Table S1. Estimated mean standard deviation serial interval different studies assuming Normal distribution Gamma distribution. Study Normal Gamma  Mean SD Mean SD Akunzirwe et al. 122.9239 26.920354 105.29254 92.61143 Ariza et al. 98.4000 8.542332 91.49460 113.66905 Kaburi et al. 167.3444 9.717630 164.68478 21.41681 Tjon-Kon-Fat et al 110.7157 16.138793 94.30272 107.28626 SD = standard deviation Figure S1. Epidemic curves estimated serial interval distributions four scabies outbreaks. Red line indicates estimated serial interval density assuming underlying gamma distribution. performed sensitivity analysis altered choice prior distribution mean serial interval. main analysis assumed prior distribution N(100,50). sensitivity analysis assumed prior distribution N(50, 75) N(150, 50). obtained similar estimates pooled mean serial interval alternative prior distributions (Table S2). Table S2. Estimated pooled mean standard deviation serial interval different prior distributions. Prior Mean SD N(100, 50) 123.24 31.55 N(50, 75) 120.87 32.22 N(150, 50) 127.15 31.73","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"time-varying-reproduction-number-2","dir":"Articles","previous_headings":"Appendix > Sensitivity Analyses","what":"Time-varying Reproduction Number","title":"On the epidemiological characteristics of scabies","text":"Figure S2. Cumulative incidence scabies cases per 1000 people Netherlands month year. Figure S3. Time-varying reproduction number scabies transmission assuming Gamma distributed serial interval distribution (black line). time-varying reproduction number estimates assuming underlying normal serial interval distribution shown blue line. Colored bands denote season. Winter = December 1 – February 28 (29 leap year); Spring = March 1 – May 31; Summer = June 1 – August 31; Autumn = September 1 – November 31.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"computing-details","dir":"Articles","previous_headings":"Appendix","what":"Computing details","title":"On the epidemiological characteristics of scabies","text":"additional R packages used work previously mentioned cited main text fdrtool42, cowplot43, devtools44, dplyr45, usethis46, ggplot247, flextable48, ftExtra49, openxlsx50, tidyverse51, broom52, viridis53, officer54, tidybayes55, ggridges56, glue57, zoo58, stringr59, forcats60, Hmisc61.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/epidemiology_of_scabies.html","id":"references-1","dir":"Articles","previous_headings":"Appendix","what":"References","title":"On the epidemiological characteristics of scabies","text":"bibliography: appendix_references.bib","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/rt_estimation_validation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Validation of time-varying reproduction number estimation","text":"mitey package lightweight package designed companion analyses presented Ainsie et al. scabies transmission. However, methods widely applicable context scabies. One key functionalities mitey estimation time-varying case reproduction number using data time symptom onset. case reproduction number (RtcR^c_t) defined average number new infections individual becomes infected, symptomatic, particular time point go causegostic2020?, useful retrospective analyses. method Wallinga Teunis estimates time-varying case reproduction number determining likelihood event occurring every pair time pointswallinga2007?. method requires specification serial interval distribution. article, demonstrate use mitey estimate case reproduction number synthetic data set, validate method able estimate true reproduction number, show several checks can used practice true reproduction number known. also highlight R packages can used similar analyses.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/rt_estimation_validation.html","id":"synthetic-data","dir":"Articles","previous_headings":"","what":"Synthetic data","title":"Validation of time-varying reproduction number estimation","text":"First, generate synthetic data use estimate time-varying case reproduction number. generate synthetic data borrow code Gostic et al.gostic2020?. Briefly, synthetic data generated deterministic SEIR model transmission rate changes abruptly. use synthetic time series new infections (observed S→E transition) input RtcR^c_t estimation method Wallinga Teunis. also test Wallinga Teunis estimator using synthetic time series symptom onset events, extracted daily E→transition. synthetic data, R0 set 2.0 initially, 0.8 1.15, simulate adoption , later, partial lifting public health interventions, respectively. Figure 1. Dynamics SEIR model showing number individuals state (Susceptible, Exposed, Infectious, Recovered) time.","code":"n <- 1e6 # total population size n_I <- 10  sim_data <- simulate_seir_ode(   arnaught = 2.0,    t_E = 4,    t_I = 4,    N = n,    S_init = n-n_I,    E_init = 0,    I_init = n_I,    n_t = 1000,    n_steps_per_t = 1   ) #>   time        S         E         I         R    cum_dS   cum_dEI       dS #> 1    0 999990.0  0.000000 10.000000  0.000000  0.000000 0.0000000       NA #> 2    1 999985.5  3.975591  8.279842  2.255488  4.510920 0.5353295 4.510920 #> 3    2 999981.5  6.583431  7.645856  4.229408  8.458695 1.8752642 3.947775 #> 4    3 999977.7  8.490626  7.639314  6.130138 12.260078 3.7694517 3.801382 #> 5    4 999973.8 10.067141  8.013009  8.080442 16.160592 6.0934513 3.900515 #> 6    5 999969.7 11.521018  8.635804 10.157231 20.314053 8.7930352 4.153460 #>         dEI      dIR #> 1        NA       NA #> 2 0.5353295 2.255488 #> 3 1.3399347 1.973920 #> 4 1.8941875 1.900730 #> 5 2.3239996 1.950305 #> 6 2.6995839 2.076789 arnaught <- 2.0 t_E <- 4 t_I <- 4  ## Calculate true case reproduction number Rt_output <- integrate_Rt(   beta_t = function(t) { arnaught / t_I },    sigma = 1/t_E,    gamma = 1/t_I,    N = 1,    T_final = 300,    E0 = 0.001,    I0 = 0)   ## Calculate Rt with WT method using mitey and symptom onset data from simulated data df_sim <- sim_data %>%   select(time, dEI) %>%   rename(onset_date = time,          inc = dEI)  rt_estimates <- rt_estim(df_sim[-1,], mean_si = 8, sd_si = 5.66, dist_si = \"gamma\")"},{"path":"https://kylieainslie.github.io/mitey/articles/rt_estimation_validation.html","id":"real-data","dir":"Articles","previous_headings":"","what":"Real data","title":"Validation of time-varying reproduction number estimation","text":"estimating RtR_t practice, impossible know underlying true RtR_t; however checks can used help ensure estimates make sense. use data weekly scabies cases Netherlands 2011 2023 real data set. peak data. Checks sense-checking estimates reproduction number: 1. Growth rate method: calculate Rt=b(t+u)/b(t)R_t = b(t+u)/b(t) b()b() incidence, t current time point, u mean generation time (, approximated mean serial interval). Calculate geometric mean time series time-varying reproduction number. geometric mean ~R0R_0. Use different R package check estimates similar, use implementation Wallinga Teunis method EpiEstim. Now let’s look plotting different methods estimate RtR_t together.","code":"# si dist parameters si_mean <- 123.24 si_sd <- 31.55  # Calculate the initial R_t rt_estimates <- rt_estim(df_real, mean_si = si_mean, sd_si = si_sd, dist_si = \"normal\")  # a little data wrangling rt_estimates1 <- rt_estimates %>%   filter(!is.nan(rt),          onset_date > min(onset_date) + 123, # trim first serial interval          onset_date < max(onset_date) - 123  # trim last serial interval          ) # 1. Calculate b(t+u)/b(t) where b() is the incidence, t is the current time #    point, and u is the mean SI seq1 <- 1:(nrow(df_real)) seq2 <- seq1 + 123 rt_check1 <- data.frame(   onset_date = (seq1 - 1) + min(df$onset_date),   rt_check1 = df_real$inc[seq2]/df_real$inc[seq1] ) # 2. Calculate geometric mean # This should be approx R0 = 1.1 rt_check2 <- exp(mean(log(rt_estimates1$rt), na.rm = TRUE)) rt_check2 # 3. Calculate rt using EpiEstim  # set-up before Rt estimation # use discritized normal distribution discretize_normal <- function(mean, sd, lower, upper) {   bins <- lower:upper   probs <- diff(pnorm(c(bins, Inf), mean, sd))  # Probabilities for each bin   return(probs) }  distr_si <- discretize_normal(mean = si_mean, sd = si_sd, lower = 0, upper = 250)  # define time windows over which to calculate Rt window <- 1 ts <- 1:nrow(df) ts <- ts[ts > 1 & ts <= (max(ts)-window+1)] te <- ts+(window-1)  # define config option  config <- make_config(incid = df$inc,                       si_distr = c(0,distr_si),                       t_start = ts,                       t_end = te) config$n_sim <- 100  # estimate Rt using WT method rt_epiestim <- wallinga_teunis(   incid = df$inc,   method = \"non_parametric_si\",   config = config)  rt_check3 <- rt_epiestim$R %>%   mutate(onset_date = t_start + min(df_real$onset_date)) %>%   select(onset_date, `Mean(R)`) # plot checks df_check <- rt_estimates1 %>%   select(onset_date, rt) %>%   left_join(., rt_check1, by = \"onset_date\") %>%   left_join(., rt_check3, by = \"onset_date\") %>%   pivot_longer(-onset_date) %>%   mutate(Method = factor(     case_when(       name == \"rt\" ~ \"WT (mitey)\",       name == \"Mean(R)\" ~ \"WT (EpiEstim)\",       name == \"rt_check1\" ~ \"Growth Rate\"     ), levels = c(\"Growth Rate\", \"WT (mitey)\", \"WT (EpiEstim)\")   )   )  p_check <- ggplot(data = df_check,                   aes(x = onset_date, y = value, color = Method)) +   geom_line() +   geom_hline(yintercept = rt_check2, linetype = \"dashed\", col = \"grey\") +   scale_color_viridis_d(option = \"D\") +   labs(title = \"Compare Methods To Estimate Rt\",        x = \"Onset Date\",        y = \"Daily Reproduction Number\",        color = \"Method\") +   theme_minimal() p_check"},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kylie Ainslie. Author, maintainer.","code":""},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ainslie K (2025). mitey: Toolkit Estimate Infectious Disease Dynamics Parameters. R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/, https://github.com/kylieainslie/mitey.","code":"@Manual{,   title = {mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters},   author = {Kylie Ainslie},   year = {2025},   note = {R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/},   url = {https://github.com/kylieainslie/mitey}, }"},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"the-mitey-package","dir":"","previous_headings":"","what":"Toolkit to Estimate Infectious Disease Dynamics Parameters","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"mitey package lightweight package designed originally companion analyses presented Ainsie et al. 2024 scabies transmission. However, methods widely applicable context scabies, thus motivation behind creating mitey package twofold also provides flexible, documented code methods estimate epidemiological quantities interest. Currently, mitey includes methods estimate ) mean standard deviation serial interval distribution using maximum likelihood framework developed Vink et al. 2014 b) time-varying reproduction number using method developed Walling Lipsitch 2007.","code":""},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"estimating-the-serial-interval","dir":"","previous_headings":"","what":"Estimating the serial interval","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"method developed Vink et al. uses data time symptom onset precise information transmission pairs assumed underlying serial interval distribution (either Gaussian Gamma) estimate mean standard deviation serial interval distribution. Briefly, method involves calculating index case--case (ICC) interval person, person earliest date symptom onset considered index case. rest individuals ICC interval calculated number days symptom onset index case.","code":""},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"Install R Install development version mitey GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"kylieainslie/mitey\")"},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"guide-and-vignettes","dir":"","previous_headings":"","what":"Guide and vignettes","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"quick start guide detailed vignettes still development. Validation method used estimate mean standard deviation serial interval proposed Vink et al. 2014 can found . manuscript pre-print motivated development package can found . Validation method used estimate time-varying reproduction number proposed Wallinga Lipsitch 2007 can found . Note: vignette still development, incomplete.","code":""},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"basic example estimating mean serial interval data time symptom onset infectious disease. first simulate index case--case (ICC) intervals. , directly simulate ICC intervals based route transmission. specified mean serial interval hmu 15 specified standard deviation hsigma 3. weights route transmission specified hw1, hw2, hw3, hw4, respectively. can look simulated data plotting histogram. Figure 1. Histogram index-case case intervals (days) simulated data. , estimate mean standard deviation simulated serial interval using si_estim function. output si_estim named list elements mean, sd, wts, contain estimated mean, standard deviation, weights serial interval distribution, respectively. see using simulated data assuming underlying normal distribution, obtain estimates close input values: mean serial interval estimate 15.16 standard deviation 2.82. also able recapture input weights: hw1 = 0.21, hw2 = 0.48, hw3 = 0.2, hw4 = 0.1. Using plot_si_fit function, can use outputs si_estim plot fitted serial interval symptom onset data. Figure 2. Fitted serial interval curves plotted symptom onset data simulated symptom onset data. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"library(mitey) library(fdrtool) set.seed(1234)  N <- 5000; hmu<-15; hsigma<-3; hw1 <- 0.2; hw2 <- 0.5; hw3 <- 0.2; hw4 <- 0.1  CP <- rhalfnorm((hw1*N),theta=sqrt(pi/2)/(sqrt(2)*hsigma)) PS <- rnorm(hw2*N,mean=hmu,sd=hsigma) PT <- rnorm(hw3*N,mean=2*hmu,sd=sqrt(2)*hsigma) PQ <- rnorm(hw4*N,mean=3*hmu,sd=sqrt(3)*hsigma)  sim_data <- round(c(CP,PS,PT,PQ)) results <- si_estim(sim_data) results #> $mean #> [1] 15.16373 #>  #> $sd #> [1] 2.823293 #>  #> $wts #> [1] 2.113966e-01 4.841131e-01 7.836824e-09 2.021913e-01 3.062666e-15 #> [6] 1.022991e-01 1.368660e-21 plot_si_fit(     dat = sim_data,     mean = results$mean[1],     sd = results$sd[1],     weights = c(results$wts[1], results$wts[2] + results$wts[3],                 results$wts[4] + results$wts[5], results$wts[6] + results$wts[7]),     dist = \"normal\"   )"},{"path":"https://kylieainslie.github.io/mitey/reference/check_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check the arguments of simulate_seir_ode(). — check_args","title":"Function to check the arguments of simulate_seir_ode(). — check_args","text":"function checks initial values different states whole numbers $R_0$, $t_E$ $t_I$ numeric.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/check_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check the arguments of simulate_seir_ode(). — check_args","text":"","code":"check_args(arnaught, t_E, t_I, N, S_init, E_init, I_init, n_t, n_steps_per_t)"},{"path":"https://kylieainslie.github.io/mitey/reference/check_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check the arguments of simulate_seir_ode(). — check_args","text":"arnaught Basic reproduction number (ratio), squiggly-R-0. Average number new infections produced infection susceptible population. scalar vector length n_t + 1, specifies R0 start timestep. R0 linearly interpolated timesteps. t_E numeric; Mean latent period. set 0, model reduces SIR. t_I numeric; Mean duration infectiousness. N integer; Total population size. S_init integer; number individuals starting susceptible state. E_init integer; number individuals starting exposed state. I_init interger; number individuals starting infectious state. n_t integer; Number units time simulate. n_steps_per_t integer; number time steps, defaults 1.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/check_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to check the arguments of simulate_seir_ode(). — check_args","text":"error message","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/construct_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to construct the transmission rate from $R_0$, $t_I$ (mean infectious period), and $n_t$. — construct_beta","title":"Function to construct the transmission rate from $R_0$, $t_I$ (mean infectious period), and $n_t$. — construct_beta","text":"Function construct transmission rate $R_0$, $t_I$ (mean infectious period), $n_t$.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/construct_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to construct the transmission rate from $R_0$, $t_I$ (mean infectious period), and $n_t$. — construct_beta","text":"","code":"construct_beta(arnaught, t_I, n_t)"},{"path":"https://kylieainslie.github.io/mitey/reference/construct_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to construct the transmission rate from $R_0$, $t_I$ (mean infectious period), and $n_t$. — construct_beta","text":"arnaught Basic reproduction number (ratio), squiggly-R-0. Average number new infections produced infection susceptible population. scalar vector length n_t + 1, specifies R0 start timestep. R0 linearly interpolated timesteps. t_I numeric; Mean duration infectiousness. n_t integer; Number units time simulate.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/construct_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to construct the transmission rate from $R_0$, $t_I$ (mean infectious period), and $n_t$. — construct_beta","text":"function determines transmission rate time point t","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"split folded normal distribution Primary-Secondary, Primary-Tertiary Primary-Quaternary routes two parts component 1: Co-Primary route component 2+3: Primary-Secondary route component 4+5: Primary-Tertiary route component 6+7: Primary-Quaternary route","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"conv_tri_dist(x, sigma = sd(x), r = x, mu = mean(x), route, quantity = \"zero\")"},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"x vector index case case intervals sigma standard deviation density distribution r description?? mu mean density distribution route integer; 1 7 indicates route transmission. quantity character; \"zero\", \"lower\", \"upper\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"vector density draws value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"iccs <- 1:30 conv_tri_dist(x = iccs, route = 1) #>  [1]  0.0000000 -0.1265320 -0.2490151 -0.3651828 -0.4729775 -0.5706108 #>  [7] -0.6566121 -0.7298632 -0.7896184 -0.8355101 -0.8675395 -0.8860538 #> [13] -0.8917126 -0.8854446 -0.8683974 -0.8418841 -0.8073273 -0.7662056 #> [19] -0.7200021 -0.6701590 -0.6180381 -0.5648898 -0.5118284 -0.4598168 #> [25] -0.4096583 -0.3619946 -0.3173109 -0.2759454 -0.2381022 -0.2038672"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate f0 for Different Components — f0","title":"Calculate f0 for Different Components — f0","text":"function calculates value f0 based component, components represent transmission routes: Co-Primary (CP), Primary-Secondary (PS), Primary-Tertiary (PT), Primary-Quaternary (PQ). split PS, PT PQ routes two parts, component 1: CP route component 2+3: PS route component 4+5: PT route component 6+7: PQ route","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate f0 for Different Components — f0","text":"","code":"f0(x, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate f0 for Different Components — f0","text":"x numeric; value evaluate function. mu numeric; mean value. sigma numeric; standard deviation. comp integer; component number (1 7). dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate f0 for Different Components — f0","text":"calculated value f0.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate f0 for Different Components — f0","text":"dist = gamma, mean (\\(\\mu\\)) standard deviation (sigma) converted shape (k) scale (theta) parameters gamma distribution, mean (\\(\\mu\\) ) variance (\\(\\sigma^2\\)) given : $$\\mu = k \\times \\theta$$ $$\\sigma^2 = k \\times \\theta^2$$.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"Helper function plot fit serial interval distribution assuming underlying gamma distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"","code":"f_gam(x, w1, w2, w3, mu, sigma)"},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"x quantile w1 probability weight co-primary case w2 probability weight primary-secondary case w3 probability weight primary-tertiary case mu mean serial interval sigma standard deviation serial interval","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"weighted density value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"Helper function plot fit serial interval distribution assuming underlying normal distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"","code":"f_norm(x, w1, w2, w3, mu, sigma)"},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"x quantile w1 probability weight co-primary case w2 probability weight primary-secondary case w3 probability weight primary-tertiary case mu mean serial interval sigma standard deviation serial interval","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"weighted density value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate flower for Different Components — flower","title":"Calculate flower for Different Components — flower","text":"function calculates value flower based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate flower for Different Components — flower","text":"","code":"flower(x, r, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate flower for Different Components — flower","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7). dist string; assumed distribution serial interval; accepts \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate flower for Different Components — flower","text":"calculated value flower.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fupper for Different Components — fupper","title":"Calculate fupper for Different Components — fupper","text":"function calculates value fupper based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fupper for Different Components — fupper","text":"","code":"fupper(x, r, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fupper for Different Components — fupper","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7). dist string; assumed distribution serial interval; accepts \"normal\" \"gamma\"; defaults \"normal\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fupper for Different Components — fupper","text":"calculated value fupper.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Two distributions can specified serial interval distribution: Normal Gamma. Normal distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\) assumed default. Gamma distribution specified, mean \\(\\mu\\) standard deviation \\(\\sigma\\) converted shape rate parameters Gamma distribution : $$ \\beta = \\frac{\\mu}{\\sigma^2} \\alpha = \\left(\\frac{\\mu}{\\beta}\\right)^2 $$","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"","code":"get_likelihood(serial_intervals, mu, sigma, distn = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"serial_intervals numeric vector serial intervals mu numeric; mean serial interval distribution sigma numeric; standard deviation serial interval distribution distn string; distribution assumed serial interval. Defaults \"normal\", also accepts \"gamma\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Likelihood transmission pair.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_Rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the instantaneous case reproductive number using the deterministic SEIR output — integrate_Rt","title":"Calculate the instantaneous case reproductive number using the deterministic SEIR output — integrate_Rt","text":"Calculate instantaneous case reproductive number using deterministic SEIR output","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_Rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the instantaneous case reproductive number using the deterministic SEIR output — integrate_Rt","text":"","code":"integrate_Rt(   beta_t,   sigma,   gamma,   N,   T_final,   E0,   I0,   dt_int = 0.1,   dt_Rt = 1,   T_inf = 1000 )"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_Rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the instantaneous case reproductive number using the deterministic SEIR output — integrate_Rt","text":"beta_t Function returns beta (t) time t. sigma Rate leaving latent class. gamma Rate leaving infected class. N Total population size. T_final Final time. E0 Initial number individuals exposed state. I0 Initial number individuals infectious state. dt_int Integration time step; defaults dt_int = 0.1. dt_Rt Case reproduction number output time step; defaults dt_Rt = 1. T_inf Final time SEIR integration. least one generation interval higher T_final.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_Rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the instantaneous case reproductive number using the deterministic SEIR output — integrate_Rt","text":"Named list two data frames: case_rt_df estimated case reproduction number every time point, ode_output output compartmental model used estimate Rt","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Component Function — integrate_component","title":"Integrate Component Function — integrate_component","text":"function integrates component function specified interval.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Component Function — integrate_component","text":"","code":"integrate_component(   d,   mu,   sigma,   comp,   dist = c(\"normal\", \"gamma\"),   lower = TRUE )"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Component Function — integrate_component","text":"d numeric; data point. mu numeric; mean value. sigma numeric, standard deviation. comp integer; component number, accepts values 1 7. dist string; assumed distribution serial interval; take \"normal\" \"gamma\". lower logical; indicates whether integrate lower part (TRUE) upper part (FALSE).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Component Function — integrate_component","text":"integrated value.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to for integrate_components() — integrate_components_wrapper","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"function computes integral components given data point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"integrate_components_wrapper(d, mu, sigma, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"d numeric; data point. mu numeric; mean value. sigma numeric; standard deviation. dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"vector containing integrated values component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"# Example 1: Compute integrations for a specific data point integrate_components_wrapper(1, 10, 2) #> [1] 2.626139e-01 1.162059e-05 9.421600e-08 3.458653e-11 2.559163e-13 #> [6] 1.096782e-16 7.867958e-19"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_seir.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to integrate SEIR — integrate_seir","title":"Function to integrate SEIR — integrate_seir","text":"Function integrate SEIR","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_seir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to integrate SEIR — integrate_seir","text":"","code":"integrate_seir(beta_t, sigma, gamma, N, T_final, E0, I0, dt = 0.01)"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_seir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to integrate SEIR — integrate_seir","text":"beta_t Function returns beta (t) time t. sigma Rate leaving latent class. gamma Rate leaving infected class. N Total population size. T_final Final time step. E0 Initial number individuals exposed state. I0 Initial number individuals infectious state. dt Size time step integrate SEIR; defaults dt = 0.01.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_seir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to integrate SEIR — integrate_seir","text":"Data frame number individuals state time point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/is.wholenumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check if input number is an integer — is.wholenumber","title":"Function to check if input number is an integer — is.wholenumber","text":"Function check input number integer","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/is.wholenumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check if input number is an integer — is.wholenumber","text":"","code":"is.wholenumber(x)"},{"path":"https://kylieainslie.github.io/mitey/reference/is.wholenumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check if input number is an integer — is.wholenumber","text":"x numeric; value check whether whole number","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/is.wholenumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to check if input number is an integer — is.wholenumber","text":"logical expression; returns TRUE x whole number","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/make_p_infectious.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the probability, $p(u)$, that an individual is infectious u days after the moment of infection. — make_p_infectious","title":"Function to compute the probability, $p(u)$, that an individual is infectious u days after the moment of infection. — make_p_infectious","text":"Function compute probability, $p(u)$, individual infectious u days moment infection.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/make_p_infectious.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the probability, $p(u)$, that an individual is infectious u days after the moment of infection. — make_p_infectious","text":"","code":"make_p_infectious(sigma, gamma)"},{"path":"https://kylieainslie.github.io/mitey/reference/make_p_infectious.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the probability, $p(u)$, that an individual is infectious u days after the moment of infection. — make_p_infectious","text":"sigma rate leaving compartment E gamma rate leaving compartment ","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/make_p_infectious.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the probability, $p(u)$, that an individual is infectious u days after the moment of infection. — make_p_infectious","text":"function computes probability infectiousnessu days moment infection","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"package provides methods estimate key epidemiological parameters infectious diseases particular application scabies.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"Maintainer: Kylie Ainslie kylie.ainslie@rivm.nl (ORCID)","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"Plot epidemic curve fitted serial interval distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"","code":"plot_si_fit(dat, mean, sd, weights, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"dat data frame containing variable x index case case (ICC) intervals mean mean serial interval distribution sd standard deviation serial interval distribution weights numeric vector weights based transmission route dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"ggplot object","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"function calculates correction factor observed time symptom onset, t. uses cumulative distribution function (pnorm) normal distribution calculate probability serial interval less time lag T_now - t, T_now current time.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"","code":"right_truncation_correction(   t,   T_now,   mean_serial_interval,   sd_serial_interval,   distribution = \"normal\" )"},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"t integer; time point infection symptom onset T_now interger; current time point mean_serial_interval numeric; mean serial interval distribution sd_serial_interval numeric; standard deviation serial interval distribution distribution character string; assumed serial interval distribution, takes arguments \"normal\" \"gamma\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"vector correction weights","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Time-varying Reproduction Number — rt_estim","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"function estimates time-varying reproduction number (R_t) using method proposed Wallinga Teunis (AJE 2004). function takes input data frame incidence data requires specification serial interval distribution. user must input mean standard deviation serial interval distribution select functional form: Normal Gamma.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"","code":"rt_estim(inc_dat, mean_si, sd_si, dist_si = \"normal\", perturb_si_dist = FALSE)"},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"inc_dat data frame; data frame incidence data. data frame two columns: inc (daily incidence) onset_date (date onset symptoms). mean_si numeric; mean serial interval distribution sd_si numeric; standard deviation serial interval distribution dist_si string; distribution assumed serial interval. Accepts \"normal\" \"gamma\". perturb_si_dist logical; true perturbed serial interval generated based dist_si, mean_si, sd_si, mean sd perturbed distribution used calculation likelihood function.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"numeric vector expected reproduction number day.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"function estimates time-varying reproduction number (R_t) using method proposed Wallinga Teunis (AJE 2004). function takes input data frame incidence data requires specification serial interval distribution. user must input mean standard deviation serial interval distribution select functional form: Normal Gamma.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"","code":"rt_estim_w_boot(inc_dat, mean_si, sd_si, dist_si = \"normal\", n_bootstrap = 100)"},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"inc_dat data frame; data frame incidence data. data frame two columns: inc (daily incidence) date. mean_si numeric; mean serial interval distribution sd_si numeric; standard deviation serial interval distribution dist_si string; distribution assumed serial interval. Accepts \"normal\" \"gamma\". n_bootstrap integer; number bootstrap samples serial interval distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"named list two data frames. first data frame (results) contains mean, mediean, 2.5th percentile, 97.5th percentile boot strapped samples. second data frame (boot_samples) contains boot strap samples time point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"function estimates serial interval using Expectation-Maximization (EM) algorithm.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"si_estim(dat, n = 50, dist = \"normal\", init = NULL)"},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"dat vector; numeric vector index case case intervals n integer; number iterations EM algorithm; defaults n = 50 dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\". init numeric vector length 2 specifying initial values use mean standard deviation. init= NULL, sample mean sample standard deviation divided 4 used.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"vector estimates mean standard deviation primary-secondary infection component","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"my_data<-c(rep(1,38),rep(2,39),rep(3,30),rep(4,17),rep(5,7))  si_estim(my_data) #> $mean #> [1] 2.23948 #>  #> $sd #> [1] 0.7980139 #>  #> $wts #> [1] 3.023907e-01 4.390443e-01 2.644476e-04 2.223004e-01 4.091187e-06 #> [6] 3.599603e-02 6.804838e-08 #>"},{"path":"https://kylieainslie.github.io/mitey/reference/simulate_seir_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","title":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","text":"Original code created Ed Baskerville (15 April 2020)","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/simulate_seir_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","text":"","code":"simulate_seir_ode(   arnaught,   t_E,   t_I,   N,   S_init,   E_init,   I_init,   n_t,   n_steps_per_t = 1 )"},{"path":"https://kylieainslie.github.io/mitey/reference/simulate_seir_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","text":"arnaught Basic reproduction number (ratio), squiggly-R-0. Average number new infections produced infection susceptible population. scalar vector length n_t + 1, specifies R0 start timestep. R0 linearly interpolated timesteps. t_E Mean latent period. set 0, model reduces SIR. t_I Mean duration infectiousness. N integer; Total population size. S_init integer; number individuals starting susceptible state. E_init integer; number individuals starting exposed state. I_init interger; number individuals starting infectious state. n_t Number units time simulate. n_steps_per_t integer; number time steps, defaults 1.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/simulate_seir_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","text":"data frame number individuals transitioning state per time step","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/simulate_seir_ode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a deterministic ODE approximation of a continuous-time, discrete-state stochastic S(E)IR model. — simulate_seir_ode","text":"model age structure.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted variance — weighted_var","title":"Calculate weighted variance — weighted_var","text":"function calculates weighted variance used estimation step (E-step) EM algorithm","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted variance — weighted_var","text":"","code":"weighted_var(x, w, na.rm = FALSE)"},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted variance — weighted_var","text":"x numeric vector w numeric vecotr weights used caluclation weighted variance x na.rm logical; remove NA values?","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted variance — weighted_var","text":"numeric estimate weighted variance x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted variance — weighted_var","text":"","code":"a <- 1:10 b <- seq(0.1, 1, length.out = 10)  weighted_var(a, b) #> [1] 6.875"},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"weighted likelihood optimising parameters assuming underlying gamma distribution point adds likelihood given weight belonging component 2: w2","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"","code":"wt_loglik(par, dat, tau2)"},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"par parameters maximised dat data used maximisation tau2 numeric; mixture weights (primary, secondary) pairs","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"value negative sum weighted log likelihood","code":""}]
