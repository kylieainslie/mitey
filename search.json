[{"path":"https://kylieainslie.github.io/mitey/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 mitey authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/serial_interval_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"The Epidemiology of Scabies","text":"Determining serial interval scabies using epidemic curves different sources. calculate index case--case (ICC) interval person class person greatest value number days since symptom onset considered index case. rest class members ICC interval calculated number days symptom onset index case. Determine time-varying reproduction number characterise changes time. use data NIVEL number reported cases per week 2011 2023 Netherlands.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/serial_interval_analysis.html","id":"data-sources","dir":"Articles","previous_headings":"","what":"Data Sources","title":"The Epidemiology of Scabies","text":"paper describes outbreak scabies preschool Ghana data pre-school Germany outbreak fishing community Uganda 2022. Data provided weekly, infections week attributed first day week SCABIES OUTBREAK AMONG RESIDENTS LONG TERM CARE FACILITY, CLARK COUNTY, NEVADA, 2015 file:///Users/kylieainslie/Downloads/Scabies%20%E2%80%93%20Clark%20[v%202015%20i%2021%20e%201.0]_BP.pdf cases identified week, date onset attributed first day week Spain outbreak hospital","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/articles/serial_interval_analysis.html","id":"estimate-serial-interval-distributions","dir":"Articles","previous_headings":"Serial Interval Analysis","what":"Estimate serial interval distributions","title":"The Epidemiology of Scabies","text":"Plot distribution study’s serial interval. assume normal distribution.","code":"# Plot serial interval curves # Data preparation x <- seq(0, 250, by = 1) y1 <- dnorm(x, mean = 167.34442, sd = 9.71763) y2 <- dnorm(x, mean = 98.4, sd = 8.542332) y3 <- dnorm(x, mean = 122.92385, sd = 26.92035) y4 <- dnorm(x, mean = 21.91776, sd = 15.23666) y5 <- dnorm(x, mean = 110.71571, sd = 16.13879) y6 <- dnorm(x, mean = 16.106246, sd = 2.421762) # Create a data frame my_data <- data.frame(   x = rep(x, 6),   y = c(y1, y2, y3, y4, y5, y6),   group = factor(rep(c(\"Ghana outbreak\", \"Germany outbreak\", \"Uganda outbreak\",                        \"Nevada (US) outbreak\", \"Netherlands outbreak\", \"Spain outbreak\"), each = length(x)),                  levels = c(\"Ghana outbreak\", \"Germany outbreak\", \"Uganda outbreak\",                             \"Nevada (US) outbreak\", \"Netherlands outbreak\", \"Spain outbreak\")) )  # Create the plot ggplot(my_data, aes(x = x, y = y, color = group)) +   geom_line(linewidth = 1) +   labs(title = \"Estimated Serial Interval Distributions\",        x = \"Time (days)\",        y = \"Density\") +   scale_color_viridis_d() +   theme_minimal() +   theme(     plot.title = element_text(hjust = 0.5),     legend.title = element_blank()   )"},{"path":"https://kylieainslie.github.io/mitey/articles/serial_interval_analysis.html","id":"meta-analysis","dir":"Articles","previous_headings":"Serial Interval Analysis","what":"Meta-analysis","title":"The Epidemiology of Scabies","text":"summary(m.brm) can see pooled mean serial interval 95.57 (95% CI: 65.27, 124.83) pooled standard deviation 15.17. output, sd(Intercept) represents standard deviation random intercepts (-study variability). Since value standard deviation random intercepts large (58.31), indicates substantial heterogeneity among studies. surprising looking estimated distributions study’s serial interval shown Figure X. Create forest plot study’s estimate mean SI pooled estimate.","code":"df_effect_sizes <- data.frame(   mean_si = c(167.34442, 98.4, 122.92385, 21.91776, 110.71571, 16.106246),   sd_si = c(9.71763, 8.542332, 26.92035, 15.23666, 16.13879, 2.421762),   n = c(nrow(ghana_df), nrow(germany_df), nrow(uganda_long_df), nrow(nevada_long_df),         nrow(dutch_long_df), nrow(spain_long_df)),   country = c(\"Ghana\", \"Germany\", \"Uganda\", \"Nevada (USA)\", \"Netherlands\", \"Spain\") ) %>%   mutate(se_si = sd_si/sqrt(n))  # we will perform a Bayesian meta-analysis using the {brms} package # specify priors priors <- c(prior(normal(100,50), class = Intercept),             prior(cauchy(0,1), class = sd))  # fit a random effects model # convert sd to se m.brm <- brm(mean_si|se(se_si) ~ 1 + (1|country),              data = df_effect_sizes,              prior = priors,              iter = 5000,              warmup = 2000,              control = list(adapt_delta = 0.99, max_treedepth = 15))  summary(m.brm) forest_data <- df_effect_sizes %>%   mutate(     lower = mean_si - 1.96 * se_si,     upper = mean_si + 1.96 * se_si,     type = \"Study\"   ) %>%   select(country, mean_si, lower, upper, type) %>%   rename(estimate = mean_si) %>%   bind_rows(     data.frame(       country = \"Pooled Estimate\",       estimate = posterior_summary(m.brm, variable = \"Intercept\")[, \"Estimate\"],       lower = posterior_summary(m.brm, variable = \"Intercept\")[, \"Q2.5\"],       upper = posterior_summary(m.brm, variable = \"Intercept\")[, \"Q97.5\"],       type = \"Pooled\"     )   ) %>%   # Ensure the pooled estimate is positioned last   mutate(country = factor(country, levels = c(setdiff(country, \"Pooled Estimate\"), \"Pooled Estimate\")))  # Create the forest plot using ggplot2 ggplot(forest_data, aes(x = estimate, y = country, xmin = lower, xmax = upper, color = type)) +   geom_point() +   geom_errorbarh(height = 0.2) +   geom_vline(xintercept = posterior_summary(m.brm, variable = \"Intercept\")[, \"Estimate\"], linetype = \"dashed\", color = \"red\") +   labs(x = \"Effect Size\", y = \"\") +   theme_minimal() +   scale_color_manual(values = c(\"Study\" = \"blue\", \"Pooled\" = \"red\")) +   theme(legend.position = \"none\")"},{"path":"https://kylieainslie.github.io/mitey/articles/serial_interval_analysis.html","id":"reproduction-number","dir":"Articles","previous_headings":"","what":"Reproduction Number","title":"The Epidemiology of Scabies","text":"Analysis weekly scabies data NIVEL. Data courtesy Mariette Hooiveld.","code":""},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kylie Ainslie. Author, maintainer.","code":""},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ainslie K (2024). mitey: Toolkit Estimate Infectious Disease Dynamics Parameters. R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/, https://github.com/kylieainslie/mitey.","code":"@Manual{,   title = {mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters},   author = {Kylie Ainslie},   year = {2024},   note = {R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/},   url = {https://github.com/kylieainslie/mitey}, }"},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"split folded normal distribution Primary-Secondary, Primary-Tertiary Primary-Quaternary routes two parts component 1: Co-Primary route component 2+3: Primary-Secondary route component 4+5: Primary-Tertiary route component 6+7: Primary-Quaternary route","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"conv_tri_dist(x, sigma = sd(x), r = x, mu = mean(x), route, quantity = \"zero\")"},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"x vector index case case intervals sigma standard deviation density distribution r description?? mu mean density distribution route integer; 1 7 indicates route transmission. quantity character; \"zero\", \"lower\", \"upper\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"vector density draws value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"iccs <- 1:30 conv_tri_dist(x = iccs, route = 1) #>  [1]  0.0000000 -0.1265320 -0.2490151 -0.3651828 -0.4729775 -0.5706108 #>  [7] -0.6566121 -0.7298632 -0.7896184 -0.8355101 -0.8675395 -0.8860538 #> [13] -0.8917126 -0.8854446 -0.8683974 -0.8418841 -0.8073273 -0.7662056 #> [19] -0.7200021 -0.6701590 -0.6180381 -0.5648898 -0.5118284 -0.4598168 #> [25] -0.4096583 -0.3619946 -0.3173109 -0.2759454 -0.2381022 -0.2038672"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate f0 for Different Components — f0","title":"Calculate f0 for Different Components — f0","text":"function calculates value f0 based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate f0 for Different Components — f0","text":"","code":"f0(x, mu, sigma, comp)"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate f0 for Different Components — f0","text":"x value evaluate function. mu mean value. sigma standard deviation. comp component number (1 7).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate f0 for Different Components — f0","text":"calculated value f0.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate flower for Different Components — flower","title":"Calculate flower for Different Components — flower","text":"function calculates value flower based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate flower for Different Components — flower","text":"","code":"flower(x, r, mu, sigma, comp)"},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate flower for Different Components — flower","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate flower for Different Components — flower","text":"calculated value flower.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fupper for Different Components — fupper","title":"Calculate fupper for Different Components — fupper","text":"function calculates value fupper based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fupper for Different Components — fupper","text":"","code":"fupper(x, r, mu, sigma, comp)"},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fupper for Different Components — fupper","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fupper for Different Components — fupper","text":"calculated value fupper.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Two distributions can specified serial interval distribution: Normal Gamma. Normal distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\) assumed default. Gamma distribution specified, mean \\(\\mu\\) standard deviation \\(\\sigma\\) converted shape rate parameters Gamma distribution : $$ \\beta = \\frac{\\mu}{\\sigma^2} \\alpha = \\left(\\frac{\\mu}{\\beta}\\right)^2 $$","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"","code":"get_likelihood(   serial_interval,   mu,   sigma,   distn = \"normal\",   tail_cut = NULL,   positive_only = TRUE )"},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"serial_interval numeric; Time difference \\( t_1 - t_2 \\) (days) two events. mu numeric; mean serial interval distribution sigma numeric; standard deviation serial interval distribution distn string; distribution assumed serial interval. Defaults \"normal\", also accepts \"gamma\". tail_cut numeric; number days beyond likelihood transmission two events 0. Defaults NULL. positive_only logical; TRUE, positive serial intervals considered. serial interval negative, function returns 0.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Likelihood transmission pair.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Component Function — integrate_component","title":"Integrate Component Function — integrate_component","text":"function integrates component function specified interval.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Component Function — integrate_component","text":"","code":"integrate_component(d, mu, sigma, comp, lower = TRUE)"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Component Function — integrate_component","text":"d numeric; data point. mu numeric; mean value. sigma numeric, standard deviation. comp integer; component number, accepts values 1 7. lower logical; indicates whether integrate lower part (TRUE) upper part (FALSE).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Component Function — integrate_component","text":"integrated value.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to for integrate_components() — integrate_components_wrapper","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"function computes integral components given data point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"integrate_components_wrapper(d, mu, sigma)"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"d numeric; data point. mu numeric; mean value. sigma numeric; standard deviation.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"vector containing integrated values component. components : Component 1: Integration CP route. Component 2: Integration PS route (mean = mu, sd = sigma). Component 3: Integration PS route (mean = -mu, sd = sigma). Component 4: Integration PT route (mean = 2*mu, sd = sqrt(2)*sigma). Component 5: Integration PT route (mean = -2*mu, sd = sqrt(2)*sigma). Component 6: Integration PQ route (mean = 3*mu, sd = sqrt(3)*sigma). Component 7: Integration PQ route (mean = -3*mu, sd = sqrt(3)*sigma).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"# Example 1: Compute integrations for a specific data point integrate_components_wrapper(1, 10, 2) #> [1] 2.626139e-01 1.162059e-05 9.421600e-08 3.458653e-11 2.559163e-13 #> [6] 1.096782e-16 7.867958e-19"},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"package provides methods estimate key epidemiological parameters infectious diseases particular application scabies.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"Maintainer: Kylie Ainslie kylie.ainslie@rivm.nl (ORCID)","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Time-varying Reproduction Number — rt_estim","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"function estimates time-varying reproduction number (R_t) using method proposed Wallinga Teunis (AJE 2004). function takes input data frame incidence data requires specification serial interval distribution. user must input mean standard deviation serial interval distribution select functional form: Normal Gamma.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"","code":"rt_estim(   inc_dat,   mean_si,   sd_si,   dist_si = c(\"normal\", \"gamma\"),   cut_tail = NULL,   pos_only = TRUE )"},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"inc_dat data frame; data frame incidence data. data frame two columns: inc (daily incidence) date. mean_si numeric; mean serial interval distribution sd_si numeric; standard deviation serial interval distribution dist_si string; distribution assumed serial interval. Accepts \"normal\" \"gamma\". cut_tail numeric; number days beyond likelihood transmission two events 0. Defaults NULL. pos_only logical; TRUE, positive serial intervals considered. serial interval negative, function returns 0.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"input data frame additional column expected reproduction number.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"function estimates serial interval using Expectation-Maximization (EM) algorithm.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"si_estim(dat, n = 50)"},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"dat vector; numeric vector index case case intervals n integer; number iterations EM algorithm; defaults n = 50","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"vector estimates mean standard deviation primary-secondary infection component","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"my_data<-c(rep(1,38),rep(2,39),rep(3,30),rep(4,17),rep(5,7))  si_estim(my_data) #> [1] 2.2394797 0.7980139"},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted variance — weighted_var","title":"Calculate weighted variance — weighted_var","text":"function calculates weighted variance used estimation step (E-step) EM algorithm","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted variance — weighted_var","text":"","code":"weighted_var(x, w, na.rm = FALSE)"},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted variance — weighted_var","text":"x numeric vector w numeric vecotr weights used caluclation weighted variance x na.rm logical; remove NA values?","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted variance — weighted_var","text":"numeric estimate weighted variance x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted variance — weighted_var","text":"","code":"a <- 1:10 b <- seq(0.1, 1, length.out = 10)  weighted_var(a, b) #> [1] 6.875"}]
