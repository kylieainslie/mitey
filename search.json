[{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Code validation for Vink method","text":"One motivations behind creating mitey package provide flexible, documented code methods can help estimate epidemiological quantities interest, serial interval, time onset symptoms primary case onset symptoms secondary case. article, describe method developed Vink et al. 201418 estimate mean standard deviation serial interval distribution using data symptom onset times (see Methods details). , demonstrate use mitey apply method data, validate able produce estimates original manuscript18.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"methods","dir":"Articles","previous_headings":"Introduction","what":"Methods","title":"Code validation for Vink method","text":"method proposed Vink et al.18 developed estimate characteristics serial interval distribution, namely mean standard deviation, using data describing dates symptom onset cases infected particular pathogen. method involves calculating index case--case (ICC) interval person, person greatest value number days since symptom onset considered index case. rest individuals ICC interval calculated number days symptom onset date symptom onset date index case. method assumes ICC intervals can split different routes transmission: Co-Primary (CP), Primary-Secondary (PS), Primary-Tertiary (PT), Primary-Quaternary (PQ) based length ICC interval. method constructs likelihood function ICC intervals using mixture model mixture components different transmission routes. , using Expectation-Maximization (EM) algorithm, method iteratively calculates probability ICC interval falls one four routes transmission. method assumes underlying Normal distribution serial interval distribution, extended assume underlying Gamma distribution. distributions can specified si_estim using dist = option.","code":""},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated Data","title":"Code validation for Vink method","text":"First use simulated ICC intervals set determine able correctly estimate mean standard deviation simulated serial interval using si_estim function mitey package. , directly simulate ICC intervals based route transmission. simulated data provided supplemental material Vink et al. specified mean serial interval hmu 15 specified standard deviation hsigma 3. weights route transmission specified hw1, hw2, hw3, hw4, respectively. Figure 1. Histogram index-case case intervals (days) simulated data. output si_estim named list elements mean, sd, wts, contain estimated mean, standard deviation, weights serial interval distribution, respectively. see using simulated data assuming underlying normal distribution, obtain estimates close input values: mean serial interval estimate 15.03 standard deviation 2.79. also able recapture input weights: hw1 = 0.21, hw2 = 0.48, hw3 = 0.2, hw4 = 0.11. Using plot_si_fit function, can use outputs si_estim plot fitted serial interval symptom onset data. Figure 2. Fitted serial interval curves plotted symptom onset data simulated symptom onset data. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"set.seed(1234)  N <- 10000; hmu<-15; hsigma<-3; hw1 <- 0.2; hw2 <- 0.5; hw3 <- 0.2; hw4 <- 0.1  CP <- rhalfnorm((hw1*N),theta=sqrt(pi/2)/(sqrt(2)*hsigma)) PS <- rnorm(hw2*N,mean=hmu,sd=hsigma) PT <- rnorm(hw3*N,mean=2*hmu,sd=sqrt(2)*hsigma) PQ <- rnorm(hw4*N,mean=3*hmu,sd=sqrt(3)*hsigma)  sim_data <- round(c(CP,PS,PT,PQ)) #>  [1]  5  1  5 10  2  2  2  2  2  4 results<- si_estim(sim_data, dist = \"normal\") results #> $mean #> [1] 15.03357 #>  #> $sd #> [1] 2.786672 #>  #> $wts #> [1] 2.100299e-01 4.823883e-01 6.706310e-09 2.003141e-01 2.304775e-15 #> [6] 1.072676e-01 9.057491e-22 plot_si_fit(     dat = sim_data,     mean = results$mean[1],     sd = results$sd[1],     weights = c(results$wts[1], results$wts[2] + results$wts[3],                 results$wts[4] + results$wts[5], results$wts[6] + results$wts[7]),     dist = \"normal\"   )"},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"historical-data","dir":"Articles","previous_headings":"","what":"Historical Data","title":"Code validation for Vink method","text":"Next, estimate mean serial interval using method Vink et al.18 different historical data sets. historical data stored articles/validation_data.rds. data set contains 5 columns: Author: first author published manuscript describing data Year: year manuscript published Pathogen: pathogen interest (e.g, influenza, measles) Country: country data collected ICC_interval: ICC intervals case described manuscript useful feature si_estim can applied multiple vectors ICC intervals stored within long-format data frame using dplyr::summarise. example shown using val_data. first select necessary columns, Author, Pathogen, Country, ICC_interval. , group data, using group_by, Author, Pathogen, Country, si_estim applied ICC intervals one study one pathogen time. Finally, apply si_estim set ICC intervals using summarise. can also specify initial values used estimate mean standard deviation serial interval. default sample mean sample standard deviation. EM algorithm sensitive choice initial value, specify initial values Table 2 Vink et al. initial values stored articles/initial_values.rds. initial values standard deviation minimum mean serial interval divided 2 random value drawn uniform distribution 2 5. Finally, Due format si_estim’s output named list, create new column estimate using mutate purrr:map_dbl. resulting output tibble columns: Author, Pathogen, Country, mean, sd, wts. mean sd columns refer estimates mean standard deviation serial interval distribution. wts column refers weights different transmission routes, can used inputs plotting fitted serial interval distribution using plot_si_fit. weights stored list, visible printing results, can accessed using results_historical$wts. comparing estimates produced si_estim estimates presented Vink et al., see si_estim successfully recaptures estimates original study (Table 1). Table 1. Estimates mean standard deviation (SD) serial interval distribution Vink et al. `si_estim` different historical data sets.  Vink et al. Estimates si_estim Estimates Author Year Pathogen Country Mean SD Mean SD Hahne1 2009 Influenza (H1N1)pdm09 Netherlands 1.7 1.2 1.7 1.2 Cauchemez2 2009 Influenza (H1N1)pdm09 United States 2.1 1.2 2.1 1.2 Savage3 2011 Influenza (H1N1)pdm09 Canada 2.8 0.8 2.8 0.8 Papenburg4 2010 Influenza (H1N1)pdm09 Canada 2.9 1.2 2.9 1.2 France5 2010 Influenza (H1N1)pdm09 United States 3.0 0.9 3.0 0.9 Morgan6 2010 Influenza (H1N1)pdm09 United States 3.7 1.1 3.7 1.1 Viboud7 2004 Influenza (H3N2) France 2.2 0.8 2.2 0.8 Aaby8 1990 Measles Kenya 9.9 2.4 9.9 2.4 Bailey9 1954 Measles England 10.9 1.9 10.9 1.9 Simpson10 1952 Measles England 10.9 2.0 10.9 2.0 Chapin11 1925 Measles United States 11.9 2.6 11.9 2.6 Fine12 2003 Measles England 13.7 1.5 13.7 1.5 Fine12 2003 Measles United States 13.8 2.5 13.8 2.5 Simpson10 1952 Mumps England 18.0 3.5 18.0 3.5 de Greeff13 2010 Pertussis Netherlands 22.8 6.5 22.8 6.5 Crowcroft14 2008 RSV England 7.5 2.1 7.5 2.1 Aycock15 1946 Rubella Unknown 18.3 2.0 18.3 2.0 Fine12 2003 Smallpox Germany 16.7 3.3 16.7 3.3 Fine12 2003 Smallpox Kosovo 17.3 1.9 17.3 1.9 Vally16 2007 Varicella Australia 13.1 2.2 13.1 2.2 Simpson10 1952 Varicella England 14.1 2.4 14.1 2.4 Lai17 2011 Varicella Taiwan 14.2 1.3 14.2 1.3 si_estim, plotting function plot_si_fit can applied numerious vectors ICC intervals using purrr:group_map. results outputted si_estim used directly must merged original ICC interval data. call new data frame df_merged contain column(s) identifying study ICC intervals correspond, well mean, standard deviation, weights outputted si_estim. Figure 3. Fitted serial interval curves plotted symptom onset data random sample historical data studies Table 1. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"#> # A tibble: 6 × 5 #>   Author Year  Pathogen Country ICC_interval #>   <chr>  <chr> <chr>    <chr>          <dbl> #> 1 Aaby   1990  Measles  Kenya              0 #> 2 Aaby   1990  Measles  Kenya              0 #> 3 Aaby   1990  Measles  Kenya              0 #> 4 Aaby   1990  Measles  Kenya              0 #> 5 Aaby   1990  Measles  Kenya              0 #> 6 Aaby   1990  Measles  Kenya              0 initial_values <- readRDS(\"initial_values.rds\") val_data_w_init <- left_join(val_data, initial_values, by = \"Pathogen\") results_historical <- val_data_w_init %>%   group_by(Author, Pathogen, Country) %>%   summarise(result = list(si_estim(.data$ICC_interval,                                     init = c(first(.data$mean_si), first(.data$sd_si))             ))) %>%   mutate(     mean = map_dbl(result, \"mean\"),     sd = map_dbl(result, \"sd\"),     wts = map(result, \"wts\")    ) %>%   select(-result) #> # A tibble: 22 × 6 #> # Groups:   Author, Pathogen [20] #>    Author    Pathogen               Country  mean    sd wts       #>    <chr>     <chr>                  <chr>   <dbl> <dbl> <list>    #>  1 Aaby      Measles                Kenya    9.93  2.40 <dbl [7]> #>  2 Aycock    Rubella                Unknown 18.3   1.97 <dbl [7]> #>  3 Bailey    Measles                England 10.9   1.93 <dbl [7]> #>  4 Cauchemez Influenza A(H1N1)pdm09 USA      2.08  1.24 <dbl [7]> #>  5 Chapin    Measles                USA     11.9   2.56 <dbl [7]> #>  6 Crowcroft RSV                    England  7.52  2.11 <dbl [7]> #>  7 Fine      Measles                England 13.7   1.50 <dbl [7]> #>  8 Fine      Measles                USA     13.8   2.55 <dbl [7]> #>  9 Fine      Smallpox               Germany 16.7   3.28 <dbl [7]> #> 10 Fine      Smallpox               Kosovo  17.3   1.90 <dbl [7]> #> # ℹ 12 more rows #> # A tibble: 10 × 13 #>    Author Pathogen Country ICC_interval  mean    sd weight_1 weight_2  weight_3 #>    <chr>  <chr>    <chr>          <dbl> <dbl> <dbl>    <dbl>    <dbl>     <dbl> #>  1 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  2 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  3 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  4 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  5 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  6 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  7 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  8 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #>  9 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #> 10 Aaby   Measles  Kenya              0  9.93  2.40    0.364    0.512 0.0000106 #> # ℹ 4 more variables: weight_4 <dbl>, weight_5 <dbl>, weight_6 <dbl>, #> #   weight_7 <dbl> # Apply the plot_si_fit function by study plots <- df_merged %>%   group_by(Author, Pathogen, Country) %>%   group_map(~ plot_si_fit(     dat = .x$ICC_interval,     mean = .x$mean[1],     sd = .x$sd[1],     weights = c(.x$weight_1[1], .x$weight_2[1] + .x$weight_3[1],                 .x$weight_4[1] + .x$weight_5[1], .x$weight_6[1] + .x$weight_7[1]),     dist = \"normal\"   ))  # Annotate plots with study names and labels # Find the order of the groups group_order <- df_merged %>%   group_by(Author, Pathogen, Country) %>%   group_keys()  labeled_plots <- lapply(seq_along(plots), function(i) {   plots[[i]] +     ggtitle(paste(group_order[i,1], group_order[i,2], group_order[i,3])) +               theme(plot.title = element_text(size = 8, hjust = 0.5),           axis.title.x = element_text(size = 8))   })  # Combine plots into a multi-pane figure final_plot <- plot_grid(   plotlist = labeled_plots[sample(1:22, 8)], # select studies to display randomly   labels = \"AUTO\",      # Automatically adds labels (A, B, C, etc.)   label_size = 12,      # Size of the labels   ncol = 4              # Number of columns; adjust as needed )"},{"path":"https://kylieainslie.github.io/mitey/articles/code_validation_for_Vink_method.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Code validation for Vink method","text":", demonstrate use mitey package estimate characteristics serial interval distribution applying method developed Vink et al. commonly available symptom onset data. show able reproduce estimates mean standard deviation serial interval distribution original study applying method numerous historical data sets variety pathogens.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kylie Ainslie. Author, maintainer.","code":""},{"path":"https://kylieainslie.github.io/mitey/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ainslie K (2024). mitey: Toolkit Estimate Infectious Disease Dynamics Parameters. R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/, https://github.com/kylieainslie/mitey.","code":"@Manual{,   title = {mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters},   author = {Kylie Ainslie},   year = {2024},   note = {R package version 0.0.0.9000, https://kylieainslie.github.io/mitey/},   url = {https://github.com/kylieainslie/mitey}, }"},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"the-mitey-package","dir":"","previous_headings":"","what":"Toolkit to Estimate Infectious Disease Dynamics Parameters","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"motivation behind creating mitey package twofold: 1) provide data code reproduce results Ainslie, K, Hooiveld, M, Wallinga, J. 2024. epidemiological characteristics scabies. , 2) provide flexible, documented code methods previously available R can help estimate epidemiological quantities interest.","code":""},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"Install R Install development version serosolver GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"kylieainslie/mitey\")"},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"guide-and-vignettes","dir":"","previous_headings":"","what":"Guide and vignettes","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"quick start guide detailed vignettes still development. Validation method used estimate mean standard deviation serial interval proposed Vink et al. 2014 can found ","code":""},{"path":"https://kylieainslie.github.io/mitey/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Toolkit to Estimate Infectious Disease Dynamics Parameters","text":"basic example estimating mean serial interval data time symptom onset infectious disease. first simulate index case--case (ICC) intervals. , directly simulate ICC intervals based route transmission. specified mean serial interval hmu 15 specified standard deviation hsigma 3. weights route transmission specified hw1, hw2, hw3, hw4, respectively. can look simulated data plotting histogram. Figure 1. Histogram index-case case intervals (days) simulated data. , estimate mean standard deviation simulated serial interval using si_estim function. output si_estim named list elements mean, sd, wts, contain estimated mean, standard deviation, weights serial interval distribution, respectively. see using simulated data assuming underlying normal distribution, obtain estimates close input values: mean serial interval estimate 15.03 standard deviation 2.79. also able recapture input weights: hw1 = 0.21, hw2 = 0.48, hw3 = 0.2, hw4 = 0.11. Using plot_si_fit function, can use outputs si_estim plot fitted serial interval symptom onset data. Figure 2. Fitted serial interval curves plotted symptom onset data simulated symptom onset data. Red line fitted serial interval curves assuming underlying Normal distribution.","code":"library(mitey) library(fdrtool) set.seed(1234)  N <- 10000; hmu<-15; hsigma<-3; hw1 <- 0.2; hw2 <- 0.5; hw3 <- 0.2; hw4 <- 0.1  CP <- rhalfnorm((hw1*N),theta=sqrt(pi/2)/(sqrt(2)*hsigma)) PS <- rnorm(hw2*N,mean=hmu,sd=hsigma) PT <- rnorm(hw3*N,mean=2*hmu,sd=sqrt(2)*hsigma) PQ <- rnorm(hw4*N,mean=3*hmu,sd=sqrt(3)*hsigma)  sim_data <- round(c(CP,PS,PT,PQ)) results<- si_estim(sim_data, dist = \"normal\") results #> $mean #> [1] 15.03357 #>  #> $sd #> [1] 2.786672 #>  #> $wts #> [1] 2.100299e-01 4.823883e-01 6.706310e-09 2.003141e-01 2.304775e-15 #> [6] 1.072676e-01 9.057491e-22 plot_si_fit(     dat = sim_data,     mean = results$mean[1],     sd = results$sd[1],     weights = c(results$wts[1], results$wts[2] + results$wts[3],                 results$wts[4] + results$wts[5], results$wts[6] + results$wts[7]),     dist = \"normal\"   )"},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"split folded normal distribution Primary-Secondary, Primary-Tertiary Primary-Quaternary routes two parts component 1: Co-Primary route component 2+3: Primary-Secondary route component 4+5: Primary-Tertiary route component 6+7: Primary-Quaternary route","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"conv_tri_dist(x, sigma = sd(x), r = x, mu = mean(x), route, quantity = \"zero\")"},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"x vector index case case intervals sigma standard deviation density distribution r description?? mu mean density distribution route integer; 1 7 indicates route transmission. quantity character; \"zero\", \"lower\", \"upper\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"vector density draws value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/conv_tri_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution of the triangular distribution with the mixture component density (continuous case) — conv_tri_dist","text":"","code":"iccs <- 1:30 conv_tri_dist(x = iccs, route = 1) #>  [1]  0.0000000 -0.1265320 -0.2490151 -0.3651828 -0.4729775 -0.5706108 #>  [7] -0.6566121 -0.7298632 -0.7896184 -0.8355101 -0.8675395 -0.8860538 #> [13] -0.8917126 -0.8854446 -0.8683974 -0.8418841 -0.8073273 -0.7662056 #> [19] -0.7200021 -0.6701590 -0.6180381 -0.5648898 -0.5118284 -0.4598168 #> [25] -0.4096583 -0.3619946 -0.3173109 -0.2759454 -0.2381022 -0.2038672"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate f0 for Different Components — f0","title":"Calculate f0 for Different Components — f0","text":"function calculates value f0 based component, components represent transmission routes: Co-Primary (CP), Primary-Secondary (PS), Primary-Tertiary (PT), Primary-Quaternary (PQ). split PS, PT PQ routes two parts, component 1: CP route component 2+3: PS route component 4+5: PT route component 6+7: PQ route","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate f0 for Different Components — f0","text":"","code":"f0(x, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate f0 for Different Components — f0","text":"x numeric; value evaluate function. mu numeric; mean value. sigma numeric; standard deviation. comp integer; component number (1 7). dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate f0 for Different Components — f0","text":"calculated value f0.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate f0 for Different Components — f0","text":"dist = gamma, mean (\\(\\mu\\)) standard deviation (sigma) converted shape (k) scale (theta) parameters gamma distribution, mean (\\(\\mu\\) ) variance (\\(\\sigma^2\\)) given : $$\\mu = k \\times \\theta$$ $$\\sigma^2 = k \\times \\theta^2$$.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"Helper function plot fit serial interval distribution assuming underlying gamma distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"","code":"f_gam(x, w1, w2, w3, mu, sigma)"},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"x quantile w1 probability weight co-primary case w2 probability weight primary-secondary case w3 probability weight primary-tertiary case mu mean serial interval sigma standard deviation serial interval","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying gamma distribution — f_gam","text":"weighted density value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"Helper function plot fit serial interval distribution assuming underlying normal distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"","code":"f_norm(x, w1, w2, w3, mu, sigma)"},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"x quantile w1 probability weight co-primary case w2 probability weight primary-secondary case w3 probability weight primary-tertiary case mu mean serial interval sigma standard deviation serial interval","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/f_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to plot the fit of the serial interval distribution assuming an underlying normal distribution — f_norm","text":"weighted density value x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate flower for Different Components — flower","title":"Calculate flower for Different Components — flower","text":"function calculates value flower based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate flower for Different Components — flower","text":"","code":"flower(x, r, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate flower for Different Components — flower","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7). dist string; assumed distribution serial interval; accepts \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/flower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate flower for Different Components — flower","text":"calculated value flower.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fupper for Different Components — fupper","title":"Calculate fupper for Different Components — fupper","text":"function calculates value fupper based component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fupper for Different Components — fupper","text":"","code":"fupper(x, r, mu, sigma, comp, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fupper for Different Components — fupper","text":"x value evaluate function. r value r. mu mean value. sigma standard deviation. comp component number (1 7). dist string; assumed distribution serial interval; accepts \"normal\" \"gamma\"; defaults \"normal\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/fupper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fupper for Different Components — fupper","text":"calculated value fupper.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Two distributions can specified serial interval distribution: Normal Gamma. Normal distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\) assumed default. Gamma distribution specified, mean \\(\\mu\\) standard deviation \\(\\sigma\\) converted shape rate parameters Gamma distribution : $$ \\beta = \\frac{\\mu}{\\sigma^2} \\alpha = \\left(\\frac{\\mu}{\\beta}\\right)^2 $$","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"","code":"get_likelihood(serial_intervals, mu, sigma, distn = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"serial_intervals numeric vector serial intervals mu numeric; mean serial interval distribution sigma numeric; standard deviation serial interval distribution distn string; distribution assumed serial interval. Defaults \"normal\", also accepts \"gamma\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/get_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the likelihood of a transmission pair given the serial interval distribution — get_likelihood","text":"Likelihood transmission pair.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Component Function — integrate_component","title":"Integrate Component Function — integrate_component","text":"function integrates component function specified interval.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Component Function — integrate_component","text":"","code":"integrate_component(   d,   mu,   sigma,   comp,   dist = c(\"normal\", \"gamma\"),   lower = TRUE )"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Component Function — integrate_component","text":"d numeric; data point. mu numeric; mean value. sigma numeric, standard deviation. comp integer; component number, accepts values 1 7. dist string; assumed distribution serial interval; take \"normal\" \"gamma\". lower logical; indicates whether integrate lower part (TRUE) upper part (FALSE).","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Component Function — integrate_component","text":"integrated value.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to for integrate_components() — integrate_components_wrapper","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"function computes integral components given data point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"integrate_components_wrapper(d, mu, sigma, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"d numeric; data point. mu numeric; mean value. sigma numeric; standard deviation. dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\"","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"vector containing integrated values component.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/integrate_components_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function to for integrate_components() — integrate_components_wrapper","text":"","code":"# Example 1: Compute integrations for a specific data point integrate_components_wrapper(1, 10, 2) #> [1] 2.626139e-01 1.162059e-05 9.421600e-08 3.458653e-11 2.559163e-13 #> [6] 1.096782e-16 7.867958e-19"},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"package provides methods estimate key epidemiological parameters infectious diseases particular application scabies.","code":""},{"path":[]},{"path":"https://kylieainslie.github.io/mitey/reference/mitey-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mitey: Toolkit to Estimate Infectious Disease Dynamics Parameters — mitey-package","text":"Maintainer: Kylie Ainslie kylie.ainslie@rivm.nl (ORCID)","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"Plot epidemic curve fitted serial interval distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"","code":"plot_si_fit(dat, mean, sd, weights, dist = \"normal\")"},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"dat data frame containing variable x index case case (ICC) intervals mean mean serial interval distribution sd standard deviation serial interval distribution weights numeric vector weights based transmission route dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\".","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/plot_si_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the epidemic curve and fitted serial interval distribution — plot_si_fit","text":"ggplot object","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"function calculates correction factor observed time symptom onset, t. uses cumulative distribution function (pnorm) normal distribution calculate probability serial interval less time lag T_now - t, T_now current time.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"","code":"right_truncation_correction(t, T_now, mean_serial_interval, sd_serial_interval)"},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"t integer; time point infection symptom onset T_now interger; current time point mean_serial_interval numeric; mean serial interval distribution sd_serial_interval numeric; standard deviation serial interval distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/right_truncation_correction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct for right truncation in estimates of time-varying reproduction number — right_truncation_correction","text":"vector correction weights","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Time-varying Reproduction Number — rt_estim","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"function estimates time-varying reproduction number (R_t) using method proposed Wallinga Teunis (AJE 2004). function takes input data frame incidence data requires specification serial interval distribution. user must input mean standard deviation serial interval distribution select functional form: Normal Gamma.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"","code":"rt_estim(inc_dat, mean_si, sd_si, dist_si = \"normal\", perturb_si_dist = FALSE)"},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"inc_dat data frame; data frame incidence data. data frame two columns: inc (daily incidence) onset_date (date onset symptoms). mean_si numeric; mean serial interval distribution sd_si numeric; standard deviation serial interval distribution dist_si string; distribution assumed serial interval. Accepts \"normal\" \"gamma\". perturb_si_dist logical; true perturbed serial interval generated based dist_si, mean_si, sd_si, mean sd perturbed distribution used calculation likelihood function.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Time-varying Reproduction Number — rt_estim","text":"numeric vector expected reproduction number day.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"function estimates time-varying reproduction number (R_t) using method proposed Wallinga Teunis (AJE 2004). function takes input data frame incidence data requires specification serial interval distribution. user must input mean standard deviation serial interval distribution select functional form: Normal Gamma.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"","code":"rt_estim_w_boot(inc_dat, mean_si, sd_si, dist_si = \"normal\", n_bootstrap = 100)"},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"inc_dat data frame; data frame incidence data. data frame two columns: inc (daily incidence) date. mean_si numeric; mean serial interval distribution sd_si numeric; standard deviation serial interval distribution dist_si string; distribution assumed serial interval. Accepts \"normal\" \"gamma\". n_bootstrap integer; number bootstrap samples serial interval distribution","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/rt_estim_w_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Time-varying Reproduction Number — rt_estim_w_boot","text":"named list two data frames. first data frame (results) contains mean, mediean, 2.5th percentile, 97.5th percentile boot strapped samples. second data frame (boot_samples) contains boot strap samples time point.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"function estimates serial interval using Expectation-Maximization (EM) algorithm.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"si_estim(dat, n = 50, dist = \"normal\", init = NULL)"},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"dat vector; numeric vector index case case intervals n integer; number iterations EM algorithm; defaults n = 50 dist string; assumed distribution serial interval; takes \"normal\" \"gamma\"; defaults \"normal\". init numeric vector length 2 specifying initial values use mean standard deviation. init= NULL, sample mean sample standard deviation divided 4 used.","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"vector estimates mean standard deviation primary-secondary infection component","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/si_estim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate serial interval using the EM Algorithm as developed by Vink et al. (2014) — si_estim","text":"","code":"my_data<-c(rep(1,38),rep(2,39),rep(3,30),rep(4,17),rep(5,7))  si_estim(my_data) #> $mean #> [1] 2.23948 #>  #> $sd #> [1] 0.7980139 #>  #> $wts #> [1] 3.023907e-01 4.390443e-01 2.644476e-04 2.223004e-01 4.091187e-06 #> [6] 3.599603e-02 6.804838e-08 #>"},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted variance — weighted_var","title":"Calculate weighted variance — weighted_var","text":"function calculates weighted variance used estimation step (E-step) EM algorithm","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted variance — weighted_var","text":"","code":"weighted_var(x, w, na.rm = FALSE)"},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted variance — weighted_var","text":"x numeric vector w numeric vecotr weights used caluclation weighted variance x na.rm logical; remove NA values?","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted variance — weighted_var","text":"numeric estimate weighted variance x","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/weighted_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted variance — weighted_var","text":"","code":"a <- 1:10 b <- seq(0.1, 1, length.out = 10)  weighted_var(a, b) #> [1] 6.875"},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"weighted likelihood optimising parameters assuming underlying gamma distribution point adds likelihood given weight belonging component 2: w2","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"","code":"wt_loglik(par, dat, tau2)"},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"par parameters maximised dat data used maximisation tau2 numeric; mixture weights (primary, secondary) pairs","code":""},{"path":"https://kylieainslie.github.io/mitey/reference/wt_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"weighted likelihood for optimising parameters assuming underlying gamma distribution each point adds to likelihood given weight belonging to component 2: w2 — wt_loglik","text":"value negative sum weighted log likelihood","code":""}]
